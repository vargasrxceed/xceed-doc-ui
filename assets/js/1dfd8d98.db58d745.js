"use strict";(self.webpackChunkxceed_doc_ui=self.webpackChunkxceed_doc_ui||[]).push([[9949],{4668:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>d,toc:()=>u});var r=n(4848),s=n(8453),i=n(1470),a=n(9365);const l={},o="Save and Load Settings",d={id:"code-snippets/29",title:"Save and Load Settings",description:"All examples in this topic assume that the grid is bound to the Orders table of the Northwind database, unless stated otherwise.",source:"@site/datagrid/code-snippets/29.md",sourceDirName:"code-snippets",slug:"/code-snippets/29",permalink:"/xceed-doc-ui/datagrid/code-snippets/29",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebardatagrid",previous:{title:"Receiving Notifications when the Selected Item(s) Changes",permalink:"/xceed-doc-ui/datagrid/code-snippets/28"},next:{title:"Selecting all Data Items in a Group",permalink:"/xceed-doc-ui/datagrid/code-snippets/30"}},c={},u=[{value:"Persisting and loading settings using an XmlSerializer",id:"persisting-and-loading-settings-using-an-xmlserializer",level:3},{value:"Persisting and loading settings through the application settings",id:"persisting-and-loading-settings-through-the-application-settings",level:3}];function g(e){const t={code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"save-and-load-settings",children:"Save and Load Settings"})}),"\n",(0,r.jsx)(t.p,{children:"All examples in this topic assume that the grid is bound to the Orders table of the Northwind database, unless stated otherwise."}),"\n",(0,r.jsx)(t.h3,{id:"persisting-and-loading-settings-using-an-xmlserializer",children:"Persisting and loading settings using an XmlSerializer"}),"\n",(0,r.jsx)(t.p,{children:"The following example demonstrates how to persist and load settings using an XML serializer."}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(a.A,{value:"xaml",label:"XAML",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-xml",children:'  <Grid xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid">\r\n    <Grid.Resources>\r\n      <xcdg:DataGridCollectionViewSource x:Key="cvs_orders"\r\n                                          Source="{Binding Source={x:Static Application.Current}, Path=Orders}" />\r\n    </Grid.Resources>\r\n    <DockPanel>\r\n      <StackPanel Orientation="Horizontal"\r\n                  DockPanel.Dock="Top">\r\n          <Button Content="Save Settings"\r\n                  Click="SaveSettings" />\r\n          <Button Content="Load Settings"\r\n                  Click="LoadSettings" />\r\n      </StackPanel>\r\n      <xcdg:DataGridControl x:Name="OrdersGrid"\r\n          ItemsSource="{Binding Source={StaticResource cvs_orders}}">\r\n      </xcdg:DataGridControl>\r\n    </DockPanel>\r\n  </Grid>\n'})})}),(0,r.jsx)(a.A,{value:"csharp",label:"C#",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:'private void SaveSettings( object sender, RoutedEventArgs e )\r\n{\r\n  SettingsRepository settings = new SettingsRepository();   \r\n  this.OrdersGrid.SaveUserSettings( settings, UserSettings.All );\r\n  XmlSerializer serializer = new XmlSerializer( typeof( SettingsRepository ) );\r\n  using( FileStream stream = new FileStream( "d:\\\\settings.xml", FileMode.CreateNew ) )\r\n  {\r\n    serializer.Serialize( stream, settings );\r\n  }\r\n}\r\nprivate void LoadSettings( object sender, RoutedEventArgs e )\r\n{\r\n  SettingsRepository settings;\r\n  using( FileStream stream = new FileStream( "d:\\\\settings.xml", FileMode.Open ) )\r\n  {\r\n    XmlSerializer serializer = new XmlSerializer( typeof( SettingsRepository ) );\r\n    settings = serializer.Deserialize( stream ) as SettingsRepository;\r\n  }\r\n  this.OrdersGrid.LoadUserSettings( settings, UserSettings.All );\r\n}\n'})})}),(0,r.jsx)(a.A,{value:"vbnet",label:"VB.NET",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-vbnet",children:'Private Sub SaveSettings( ByVal sender As Object, ByVal e As RoutedEventArgs )\r\n  Dim settings As New SettingsRepository()\r\n  Me.OrdersGrid.SaveUserSettings( settings, UserSettings.All )\r\n  Dim serializer As New XmlSerializer( GetType( SettingsRepository ) )\r\n  Using stream As New FileStream( "d:\\settings.xml", FileMode.CreateNew )\r\n    serializer.Serialize( stream, settings )\r\n  End Using\r\nEnd Sub\r\nPrivate Sub LoadSettings( ByVal sender As Object, ByVal e As RoutedEventArgs )\r\n  Dim settings As SettingsRespository\r\n  Using stream As New FileStream( "d:\\settings.xml", FileMode.Open )\r\n    Dim serializer As New XmlSerializer( GetType( SettingsRepository ) )\r\n    settings = TryCast( serializer.Deserialize( stream ), SettingsRepository )\r\n  End Using\r\n  Me.OrdersGrid.LoadUserSettings( settings, UserSettings.All )\r\nEnd Sub\n'})})})]}),"\n",(0,r.jsx)(t.h3,{id:"persisting-and-loading-settings-through-the-application-settings",children:"Persisting and loading settings through the application settings"}),"\n",(0,r.jsx)(t.p,{children:"The following example demonstrates how to persist and load settings using the application settings."}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(a.A,{value:"xaml",label:"XAML",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-xml",children:'<Grid xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid">\r\n  <Grid.Resources>\r\n    <xcdg:DataGridCollectionViewSource x:Key="cvs_orders"\r\n                                        Source="{Binding Source={x:Static Application.Current}, Path=Orders}" />\r\n  </Grid.Resources>\r\n  <DockPanel>\r\n    <StackPanel Orientation="Horizontal"\r\n                DockPanel.Dock="Top">\r\n        <Button Content="Save Settings"\r\n                Click="SaveSettings" />\r\n        <Button Content="Load Settings"\r\n                Click="LoadSettings" />\r\n    </StackPanel>\r\n    <xcdg:DataGridControl x:Name="OrdersGrid"\r\n        ItemsSource="{Binding Source={StaticResource cvs_orders}}">\r\n    </xcdg:DataGridControl>\r\n  </DockPanel>\r\n</Grid>\n'})})}),(0,r.jsx)(a.A,{value:"csharp",label:"C#",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"  private void SaveSettings( object sender, RoutedEventArgs e )\r\n  {\r\n    if( Xceed.Wpf.Documentation.Properties.Settings.Default.GridSettings == null )\r\n    {\r\n      Xceed.Wpf.Documentation.Properties.Settings.Default.GridSettings = new SettingsRepository();\r\n    }\r\n  this.OrdersGrid.SaveUserSettings( Xceed.Wpf.Documentation.Properties.Settings.Default.GridSettings, UserSettings.All );\r\n  }\r\n  private void LoadSettings( object sender, RoutedEventArgs e )\r\n  {\r\n    if( Xceed.Wpf.Documentation.Properties.Settings.Default.GridSettings == null )\r\n      return;\r\n    this.OrdersGrid.LoadUserSettings( Xceed.Wpf.Documentation.Properties.Settings.Default.GridSettings, UserSettings.All );\r\n  }\n"})})}),(0,r.jsx)(a.A,{value:"vbnet",label:"VB.NET",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-vbnet",children:"  Private Sub SaveSettings( ByVal sender As Object, ByVal e As RoutedEventArgs )\r\n    If Xceed.Wpf.Documentation.Properties.Settings.Default.GridSettings Is Nothing Then\r\n      Xceed.Wpf.Documentation.Properties.Settings.Default.GridSettings = New SettingsRepository()\r\n    End If\r\n    Me.OrdersGrid.SaveUserSettings( Xceed.Wpf.Documentation.Properties.Settings.Default.GridSettings, UserSettings.All )\r\n  End Sub\r\n  Private Sub LoadSettings( ByVal sender As Object, ByVal e As RoutedEventArgs )\r\n    If Xceed.Wpf.Documentation.Properties.Settings.Default.GridSettings Is Nothing Then\r\n      Return\r\n    End If\r\n    Me.OrdersGrid.LoadUserSettings( Xceed.Wpf.Documentation.Properties.Settings.Default.GridSettings, UserSettings.All )\r\n  End Sub\n"})})})]}),"\n",(0,r.jsxs)(t.p,{children:["In addition to persisting and load the grid-specific settings to and from the resources, the application settings themselves must also be persisted using the default setting's ",(0,r.jsx)(t.code,{children:"Reload"})," and ",(0,r.jsx)(t.code,{children:"Save"})," methods, which are usually called in the application's ",(0,r.jsx)(t.code,{children:"OnStartup"})," and ",(0,r.jsx)(t.code,{children:"OnExit"})," overrides, respectively."]}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(a.A,{value:"csharp",label:"C#",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:'  protected override void OnStartup( StartupEventArgs e )\r\n  {\r\n    Xceed.Wpf.DataGrid.Licenser.LicenseKey = "license_key";\r\n    base.OnStartup( e );  \r\n    Settings.Default.Reload();\r\n  }\r\n  protected override void OnExit( ExitEventArgs e )\r\n  {  \r\n    Settings.Default.Save();\r\n    base.OnExit( e );\r\n  }\n'})})}),(0,r.jsx)(a.A,{value:"vbnet",label:"VB.NET",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-vbnet",children:'  Protected Overrides Sub OnStartup( ByVal e As StartupEventArgs )\r\n    Xceed.Wpf.DataGrid.Licenser.LicenseKey = "license_key"\r\n    MyBase.OnStartup( e )\r\n    Settings.Default.Reload()\r\n  End Sub\r\n  Protected Override Sub OnExit( ByVal e As ExitEventArgs )\r\n    Settings.Default.Save()\r\n    MyBase.OnExit( e )\r\n  End Sub\n'})})})]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}},9365:(e,t,n)=>{n.d(t,{A:()=>a});n(6540);var r=n(4164);const s={tabItem:"tabItem_Ymn6"};var i=n(4848);function a(e){let{children:t,hidden:n,className:a}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(s.tabItem,a),hidden:n,children:t})}},1470:(e,t,n)=>{n.d(t,{A:()=>y});var r=n(6540),s=n(4164),i=n(3104),a=n(6347),l=n(205),o=n(7485),d=n(1682),c=n(679);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function g(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??function(e){return u(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:s}}=e;return{value:t,label:n,attributes:r,default:s}}))}(n);return function(e){const t=(0,d.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const s=(0,a.W6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,o.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(s.location.search);t.set(i,e),s.replace({...s.location,search:t.toString()})}),[i,s])]}function S(e){const{defaultValue:t,queryString:n=!1,groupId:s}=e,i=g(e),[a,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:i}))),[d,u]=h({queryString:n,groupId:s}),[S,m]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[s,i]=(0,c.Dv)(n);return[s,(0,r.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:s}),v=(()=>{const e=d??S;return p({value:e,tabValues:i})?e:null})();(0,l.A)((()=>{v&&o(v)}),[v]);return{selectedValue:a,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),m(e)}),[u,m,i]),tabValues:i}}var m=n(2303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=n(4848);function b(e){let{className:t,block:n,selectedValue:r,selectValue:a,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.a_)(),c=e=>{const t=e.currentTarget,n=o.indexOf(t),s=l[n].value;s!==r&&(d(t),a(s))},u=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=o.indexOf(e.currentTarget)+1;t=o[n]??o[0];break}case"ArrowLeft":{const n=o.indexOf(e.currentTarget)-1;t=o[n]??o[o.length-1];break}}t?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},t),children:l.map((e=>{let{value:t,label:n,attributes:i}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:e=>o.push(e),onKeyDown:u,onClick:c,...i,className:(0,s.A)("tabs__item",v.tabItem,i?.className,{"tabs__item--active":r===t}),children:n??t},t)}))})}function x(e){let{lazy:t,children:n,selectedValue:i}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===i));return e?(0,r.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:a.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==i})))})}function A(e){const t=S(e);return(0,f.jsxs)("div",{className:(0,s.A)("tabs-container",v.tabList),children:[(0,f.jsx)(b,{...t,...e}),(0,f.jsx)(x,{...t,...e})]})}function y(e){const t=(0,m.A)();return(0,f.jsx)(A,{...e,children:u(e.children)},String(t))}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>l});var r=n(6540);const s={},i=r.createContext(s);function a(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);