"use strict";(self.webpackChunkxceed_doc_ui=self.webpackChunkxceed_doc_ui||[]).push([[1478],{873:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=t(4848),o=t(8453);const i={},d="MVVM Support",s={id:"fundamentals/mvvm-support",title:"MVVM Support",description:"Improved support added in v6.6",source:"@site/datagrid/fundamentals/mvvm-support.md",sourceDirName:"fundamentals",slug:"/fundamentals/mvvm-support",permalink:"/xceed-doc-ui/datagrid/fundamentals/mvvm-support",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebardatagrid",previous:{title:"Items and Containers",permalink:"/xceed-doc-ui/datagrid/fundamentals/items-containers"},next:{title:"Persist Settings",permalink:"/xceed-doc-ui/datagrid/fundamentals/persist-settings"}},a={},c=[{value:"Improved support added in v6.6",id:"improved-support-added-in-v66",level:2},{value:"Improved support added in v6.2",id:"improved-support-added-in-v62",level:2},{value:"Other improvements that date back to version 4.1",id:"other-improvements-that-date-back-to-version-41",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"mvvm-support",children:"MVVM Support"})}),"\n",(0,r.jsx)(n.h2,{id:"improved-support-added-in-v66",children:"Improved support added in v6.6"}),"\n",(0,r.jsxs)(n.p,{children:["The Column class now inherits from ",(0,r.jsx)(n.code,{children:"FrameworkContentElement"}),". It offers better support for binding in XAML."]}),"\n",(0,r.jsxs)(n.p,{children:["The MergedHeader class now inherits from ",(0,r.jsx)(n.code,{children:"FrameworkContentElement"}),", and can have its properties be the target of a binding through ",(0,r.jsx)(n.strong,{children:"DataContext"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"improved-support-added-in-v62",children:"Improved support added in v6.2"}),"\n",(0,r.jsxs)(n.p,{children:["An new dependency property, SelectedItemsSource on DataGridControl, allows to synchronize the selected items in the DataGrid with that of the ",(0,r.jsx)(n.strong,{children:"ViewModel"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"ItemsSourceName"}),", ",(0,r.jsx)(n.code,{children:"CurrentItem"})," and ",(0,r.jsx)(n.code,{children:"CurrentColumn"})," are now dependency properties. Both ",(0,r.jsx)(n.code,{children:"CurrentItem"})," and ",(0,r.jsx)(n.code,{children:"CurrentColumn"})," bind in two way mode by default."]}),"\n",(0,r.jsxs)(n.p,{children:["A new dependency property, ",(0,r.jsx)(n.code,{children:"CurrentColumnFieldName"}),", is now available on ",(0,r.jsx)(n.code,{children:"DataGridControl"})," to set the current column in the grid to the current fieldname in the ",(0,r.jsx)(n.strong,{children:"ViewModel"}),".  This also binds in two way mode by default."]}),"\n",(0,r.jsxs)(n.p,{children:["The ForeignKeyConfiguration class now inherits from Freezable, and can have its properties be the target of a binding through ",(0,r.jsx)(n.strong,{children:"DataContext"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The DetailConfiguration class now inherits from ",(0,r.jsx)(n.code,{children:"FrameworkContentElement"}),", and can have its properties be the target of a binding through ",(0,r.jsx)(n.strong,{children:"DataContext"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["**The DetailConfiguration class now inherits from ",(0,r.jsx)(n.code,{children:"FrameworkContentElement"}),", and can have its properties be the target of a binding through DataContext.\r\n**"]}),"\n",(0,r.jsx)(n.h2,{id:"other-improvements-that-date-back-to-version-41",children:"Other improvements that date back to version 4.1"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"Column"})," class now inherits from Freezable, and can now be defined and provided as a resource, in which its properties can be the target of a binding through ",(0,r.jsx)(n.strong,{children:"DataContext"}),". In addition, a column's parent data grid control can now be accessed through its ",(0,r.jsx)(n.code,{children:"ParentDataGridControl"})," property, making it possible to reach its ",(0,r.jsx)(n.strong,{children:"DataContext"})," and bind properties to the ",(0,r.jsx)(n.strong,{children:"ViewModel"})," when the Column is added directly in its collection, in xaml."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"SynchronizeCurrent"})," and ",(0,r.jsx)(n.code,{children:"SynchronizeSelectionWithCurrent"})," properties were added to the ",(0,r.jsx)(n.code,{children:"DataGridControl"})," class, making it easier to sync the grid's current and selected item through the ",(0,r.jsx)(n.strong,{children:"ViewModel"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"AutoRemoveColumnsAndDetailConfigurations"})," property was added to the ",(0,r.jsx)(n.code,{children:"DataGridControl"})," class, making it easier to dynamically change the items source. This property works in conjunction with the AutoCreateColumns and ",(0,r.jsx)(n.code,{children:"AutoCreateDetailConfigurations"})," properties."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>s});var r=t(6540);const o={},i=r.createContext(o);function d(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);