"use strict";(self.webpackChunkxceed_doc_ui=self.webpackChunkxceed_doc_ui||[]).push([[2623],{1955:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var n=o(4848),i=o(8453);const a={},r="Grouping Data",s={id:"listbox/05",title:"Grouping Data",description:'The data contained in a listbox can be grouped into logical sets through the use of GroupDescription objects. Multiple group descriptions can be added to the GroupDescriptions collection, but items are displayed in "flattened" groups. For example, given the following XAML, "Canada - Moncton" might appear in a group header followed by items with that country and city, followed by another group header containing "Canada - Montreal."',source:"@site/docs/listbox/05.md",sourceDirName:"listbox",slug:"/listbox/05",permalink:"/xceed-doc-ui/docs/listbox/05",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Filtering Data",permalink:"/xceed-doc-ui/docs/listbox/04"},next:{title:"Selecting Data",permalink:"/xceed-doc-ui/docs/listbox/06"}},c={},d=[{value:"Group Headers",id:"group-headers",level:2},{value:"The DataNavigationControl",id:"the-datanavigationcontrol",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"grouping-data",children:"Grouping Data"})}),"\n",(0,n.jsxs)(t.p,{children:["The data contained in a listbox can be grouped into logical sets through the use of ",(0,n.jsx)(t.strong,{children:"GroupDescription"})," objects. Multiple group descriptions can be added to the ",(0,n.jsx)(t.code,{children:"GroupDescriptions"}),' collection, but items are displayed in "flattened" groups. For example, given the following XAML, "Canada - Moncton" might appear in a group header followed by items with that country and city, followed by another group header containing "Canada - Montreal."']}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-xml",children:'<xclb:ListBox.GroupDescriptions>\r\n    <PropertyGroupDescription PropertyName="ShipCountry"/>\r\n    <PropertyGroupDescription PropertyName="ShipCity"/>\r\n</xclb:ListBox.GroupDescriptions>\n'})}),"\n",(0,n.jsx)(t.h2,{id:"group-headers",children:"Group Headers"}),"\n",(0,n.jsxs)(t.p,{children:["Groups are preceded by group headers, which scroll with the groups. If the listbox uses a StackPanel or a StackView, the group headers can be made sticky through the IsSticky property of ",(0,n.jsx)(t.code,{children:"ListBoxContainerConfigurationBase"}),". It is not possible to make group headers sticky when using ",(0,n.jsx)(t.code,{children:"PathPanel"})," or ",(0,n.jsx)(t.code,{children:"PathView"}),"."]}),"\n",(0,n.jsx)(t.p,{children:"Group headers include three buttons that are mapped to commands:"}),"\n",(0,n.jsx)(t.p,{children:"The up- and down-arrow buttons are used to navigate to the group following and preceding the group, respectively, whose header was interacted with. When a group is navigated to, it is moved to the top of the listbox's viewport."}),"\n",(0,n.jsxs)(t.p,{children:["The third button is used to open a panel that displays the listbox's groups and allows quick navigation to the chosen group. You must set the DataNavigationControl's ",(0,n.jsx)(t.code,{children:"DataNavigationConfiguration"})," attached property in order to activate it."]}),"\n",(0,n.jsx)(t.h2,{id:"the-datanavigationcontrol",children:"The DataNavigationControl"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"DataNavigationConfiguration"})," attached property of the DataNavigationControl class accepts three types of objects: ",(0,n.jsx)(t.code,{children:"AlphabeticalDataNavigationConfiguration"}),", ",(0,n.jsx)(t.code,{children:"RangeDataNavigationConfiguration"}),", and ",(0,n.jsx)(t.code,{children:"CustomKeysDataNavigationConfiguration"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["Setting ",(0,n.jsx)(t.code,{children:"DataNavigationConfiguration"})," to ",(0,n.jsx)(t.code,{children:"AlphabeticalDataNavigationConfiguration"})," causes the ",(0,n.jsx)(t.code,{children:"DataNavigationControl"})," to display keys A through Z. The first ",(0,n.jsx)(t.code,{children:"GroupDescription"})," in GroupDescriptions must be of type string when ",(0,n.jsx)(t.code,{children:"DataNavigationConfiguration"})," is set to an instance of ",(0,n.jsx)(t.code,{children:"AlphabeticalDataNavigationConfiguration"}),". The following XAML configures DataNavigationControl to use keys A through Z:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-xml",children:'<xclb:ListBox x:Name="listBox"\r\n              ItemsSource="{Binding}"\r\n              ItemTemplate="{StaticResource orderListBoxItemTemplate}"\r\n              ToolPaneVisibility="Visible">\r\n...\r\n\r\n  <xclb:DataNavigationControl.DataNavigationConfiguration>\r\n    <xclb:AlphabeticalDataNavigationConfiguration />\r\n  </xclb:DataNavigationControl.DataNavigationConfiguration>\r\n</xclb:ListBox>\n'})}),"\n",(0,n.jsx)(t.p,{children:"Clicking on a button in the control causes the listbox to browse to the first group whose first-level GroupDescription corresponds to that letter."}),"\n",(0,n.jsxs)(t.p,{children:["The individual items in the ",(0,n.jsx)(t.code,{children:"DataNavigationControl"})," are represented by ",(0,n.jsx)(t.code,{children:"DataNavigationItem"})," instances."]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"RangeDataNavigationConfiguration"})," class provides ",(0,n.jsx)(t.code,{children:"Start"})," and ",(0,n.jsx)(t.code,{children:"End"})," properties that represent the start and end keys of a range. A ",(0,n.jsx)(t.code,{children:"Step"})," property determines what increment is applied between these values. Clicking on a key's button will cause the listbox to navigate to the first item whose first-level group is equal to the value of that key. The first GroupDescription in ",(0,n.jsx)(t.code,{children:"GroupDescriptions"})," must be a numeric type when ",(0,n.jsx)(t.code,{children:"DataNavigationConfiguration"})," is set to an instance of RangeDataNavigationConfiguration."]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"CustomKeysDataNavigationConfiguration"})," class allows the use of custom keys in the data navigation control. These keys are set through the ",(0,n.jsx)(t.code,{children:"CustomKeys"})," property of the class."]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>r,x:()=>s});var n=o(6540);const i={},a=n.createContext(i);function r(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);