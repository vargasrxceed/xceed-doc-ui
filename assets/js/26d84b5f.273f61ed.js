"use strict";(self.webpackChunkxceed_doc_ui=self.webpackChunkxceed_doc_ui||[]).push([[6476],{620:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var n=o(4848),i=o(8453);const s={},r="Listbox control",a={id:"listbox/01",title:"Listbox control",description:"Xceed's WPF listbox control is the perfect drop-in replacement for the standard listbox that behaves the way a listbox should! Thanks to an API that is designed to allow it to fit in to any project using the stock WPF listbox, you'll be up and running in no time. But this control gives you so much more than that standard control!",source:"@site/docs/listbox/01.md",sourceDirName:"listbox",slug:"/listbox/01",permalink:"/xceed-doc-ui/docs/listbox/01",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Comparing the DataGrids",permalink:"/xceed-doc-ui/docs/datagrid/comparing-datagrids"},next:{title:"Providing Data",permalink:"/xceed-doc-ui/docs/listbox/02"}},l={},c=[];function d(e){const t={h1:"h1",header:"header",p:"p",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"listbox-control",children:"Listbox control"})}),"\n",(0,n.jsx)(t.p,{children:"Xceed's WPF listbox control is the perfect drop-in replacement for the standard listbox that behaves the way a listbox should! Thanks to an API that is designed to allow it to fit in to any project using the stock WPF listbox, you'll be up and running in no time. But this control gives you so much more than that standard control!"}),"\n",(0,n.jsx)(t.p,{children:"Xceed's WPF listbox delivers a background, remote data retrieval engine that only gets records currently visible in the viewport (data virtualization), or those immediately preceding or following the current ones (active/passive pre-fetching) so they are ready when the end-user scrolls. This greatly reduces the amount of data transferred, making remote data access feel fast like no other listbox can do. Background (asynchronous) retrieval keeps the UI responsive, always. What's more, everything works automatically!"}),"\n",(0,n.jsx)(t.p,{children:"Powerful grouping with sticky header support helps make data easy to handle, and an innovative group navigation control that provides previous/next group commands and index entry buttons lets end-users go quickly to the item they're looking for. A search box further assists end-users by giving them access to the filtering capabilities you define. And fluid smooth scrolling and insert/delete animations, which increase perceived performance by masking network lag when the listbox is waiting for slow data sources, help you create an incredible UI experience."}),"\n",(0,n.jsx)(t.p,{children:'Xceed\'s listbox control also support multiple views: a traditional vertical-scrolling list, as well as a horizontal version, and "path" views, which let you place items along any geometric path in the viewport, for example, creating a carousel view. Beautiful themes let the listboxes match the style of your application, whatever it may be. And the listbox provides fully configurable drag-and-drop operations.'}),"\n",(0,n.jsx)(t.p,{children:"See the ListBox sample in the LiveExplorer application for examples."})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>r,x:()=>a});var n=o(6540);const i={},s=n.createContext(i);function r(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);