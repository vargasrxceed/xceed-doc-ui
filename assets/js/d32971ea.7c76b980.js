"use strict";(self.webpackChunkxceed_doc_ui=self.webpackChunkxceed_doc_ui||[]).push([[4689],{987:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>s,default:()=>x,frontMatter:()=>l,metadata:()=>c,toc:()=>u});var t=n(4848),a=n(8453),o=n(1470),i=n(9365);const l={},s="Printing and Exporting",c={id:"code-snippets/20",title:"Printing and Exporting",description:"The following page provides a list of examples that demonstrate how to customize the appearance of printable views.",source:"@site/datagrid/code-snippets/20.md",sourceDirName:"code-snippets",slug:"/code-snippets/20",permalink:"/xceed-doc-ui/datagrid/code-snippets/20",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebardatagrid",previous:{title:"Preventing ScrollBars from being Displayed",permalink:"/xceed-doc-ui/datagrid/code-snippets/19"},next:{title:"Providing a Default Detail Configuration",permalink:"/xceed-doc-ui/datagrid/code-snippets/21"}},d={},u=[{value:"Configuring a print view",id:"configuring-a-print-view",level:3},{value:"Configuring a progress window",id:"configuring-a-progress-window",level:3},{value:"Styling a page",id:"styling-a-page",level:3},{value:"Exporting to Excel (ExcelExporter Class)",id:"exporting-to-excel-excelexporter-class",level:3},{value:"Exporting to Excel (ExportToExcel Method)",id:"exporting-to-excel-exporttoexcel-method",level:3},{value:"Changing the group-header formats",id:"changing-the-group-header-formats",level:3}];function p(e){const r={admonition:"admonition",code:"code",em:"em",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"printing-and-exporting",children:"Printing and Exporting"})}),"\n",(0,t.jsx)(r.p,{children:"The following page provides a list of examples that demonstrate how to customize the appearance of printable views."}),"\n",(0,t.jsx)(r.admonition,{type:"tip",children:(0,t.jsxs)(r.p,{children:["All examples in this topic assume that the grid is bound to the ",(0,t.jsx)(r.em,{children:"Employees"})," table of the Northwind database, unless stated otherwise."]})}),"\n",(0,t.jsx)(r.h3,{id:"configuring-a-print-view",children:"Configuring a print view"}),"\n",(0,t.jsx)(r.p,{children:"The following example demonstrates how to use a PrintTableView and configure it to display a title in the page headers and the page number in the page footers. The elements added to these sections must be added as DataTemplates and will be repeated on each page."}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.strong,{children:"Print"})," method will be called in the button's ",(0,t.jsx)(r.code,{children:"Click"})," event, whose implementation is provided below."]}),"\n",(0,t.jsxs)(o.A,{children:[(0,t.jsx)(i.A,{value:"xaml",label:"XAML",default:!0,children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-xml",children:'  <Grid xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"\r\n        xmlns:local="clr-namespace:Xceed.Wpf.Documentation">\r\n    <Grid.Resources>\r\n      <xcdg:DataGridCollectionViewSource x:Key="cvs_employees"\r\n                                      Source="{Binding Source={x:Static Application.Current},\r\n                                                          Path=Employees}"/>        \r\n    </Grid.Resources>\r\n  \r\n    <DockPanel>\r\n      <Button Content="Print Grid"\r\n              Click="PrintGrid"\r\n              DockPanel.Dock="Top"/>\r\n        <xcdg:DataGridControl x:Name="EmployeesGrid"\r\n                              ItemsSource="{Binding Source={StaticResource cvs_employees}}">\r\n        <xcdg:DataGridControl.PrintView>\r\n          <xcdg:PrintTableView>\r\n            <xcdg:PrintTableView.PageHeaders>\r\n              <DataTemplate>\r\n                <TextBlock Text="Xceed WPF Documentation"\r\n                            HorizontalAlignment="Center"\r\n                            FontWeight="Bold"\r\n                            FontSize="20"/>\r\n              </DataTemplate>\r\n              <DataTemplate>\r\n                <TextBlock Text="Printing Example"\r\n                            HorizontalAlignment="Center"\r\n                            FontSize="16"/>\r\n              </DataTemplate>\r\n            </xcdg:PrintTableView.PageHeaders>\r\n            <xcdg:PrintTableView.PageFooters>\r\n            <DataTemplate>\r\n              <TextBlock Text="{xcdg:ViewBinding CurrentPageNumber}"\r\n                          HorizontalAlignment="Right"/>\r\n            </DataTemplate>\r\n          </xcdg:PrintTableView.PageFooters>\r\n        </xcdg:PrintTableView>\r\n      </xcdg:DataGridControl.PrintView>\r\n      </xcdg:DataGridControl>\r\n    </DockPanel>\r\n  </Grid>\n'})})}),(0,t.jsx)(i.A,{value:"csharp",label:"C#",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-csharp",children:'  private void PrintGrid( object sender, RoutedEventArgs e )\r\n  {\r\n    this.EmployeesGrid.Print( "Employee_Grid", true );\r\n  }\n'})})}),(0,t.jsx)(i.A,{value:"vbnet",label:"VB.NET",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-vbnet",children:'  Private Sub PrintGrid( ByVal sender As Object, ByVal e As RoutedEventArgs )\r\n    Me.EmployeeGrid.Print( "Employee_Grid", True )\r\n  End Sub\n'})})})]}),"\n",(0,t.jsx)(r.h3,{id:"configuring-a-progress-window",children:"Configuring a progress window"}),"\n",(0,t.jsxs)(r.p,{children:["The following example demonstrates how to change the default text displayed in the progress window when the ",(0,t.jsx)(r.code,{children:"Print"})," or ",(0,t.jsx)(r.code,{children:"ExportToXps"})," methods are called. The implementation of the ",(0,t.jsx)(r.strong,{children:"PrintGrid"})," method is provided below."]}),"\n",(0,t.jsxs)(o.A,{children:[(0,t.jsx)(i.A,{value:"xaml",label:"XAML",default:!0,children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-xml",children:'  <Grid xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid">\r\n    <Grid.Resources>\r\n      <xcdg:DataGridCollectionViewSource x:Key="cvs_employees"\r\n                                      Source="{Binding Source={x:Static Application.Current},\r\n                                                      Path=Employees}"/>\r\n    </Grid.Resources>\r\n    <DockPanel>\r\n      <Button Content="Print Employee Information"\r\n              Click="PrintGrid"\r\n              DockPanel.Dock="Top"/>\r\n      <xcdg:DataGridControl x:Name="EmployeesGrid"\r\n                            ItemsSource="{Binding Source={StaticResource cvs_employees}}"\r\n                            DockPanel.Dock="Bottom">\r\n        <xcdg:DataGridControl.PrintView>\r\n          <xcdg:PrintTableView>\r\n            <xcdg:PrintTableView.ProgressWindowDescription>\r\n              <StackPanel Orientation="Horizontal">\r\n                <TextBlock Text="Printing page "/>\r\n                <TextBlock Text="{Binding CurrentPageNumber}"/>\r\n                <TextBlock Text=" of employee information..."/>\r\n              </StackPanel>\r\n            </xcdg:PrintTableView.ProgressWindowDescription>\r\n          </xcdg:PrintTableView>\r\n        </xcdg:DataGridControl.PrintView>\r\n      </xcdg:DataGridControl>\r\n    </DockPanel>\r\n  </Grid>\n'})})}),(0,t.jsx)(i.A,{value:"csharp",label:"C#",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-csharp",children:'  private void PrintGrid( object sender, RoutedEventArgs e )\r\n  {\r\n    this.EmployeesGrid.Print( "EmployeeInformation", true );\r\n  }\n'})})}),(0,t.jsx)(i.A,{value:"vbnet",label:"VB.NET",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-vbnet",children:'  Private Sub PrintGrid( ByVal sender As Object, ByVal e As RoutedEventArgs )\r\n    Me.EmployeesGrid.Print( "EmployeeInformation", True )\r\n  End Sub\n'})})})]}),"\n",(0,t.jsx)(r.h3,{id:"styling-a-page",children:"Styling a page"}),"\n",(0,t.jsxs)(r.p,{children:["The following example demonstrates how to create a style to change the layout of the printed pages by providing a new ",(0,t.jsx)(r.strong,{children:"ControlTemplate"})," that will place the page headers and footers at the top of each page and display an orange border around the area where the grid is printed."]}),"\n",(0,t.jsx)(r.p,{children:"The Print method will be called in the button's Click event, whose implementation is provided below."}),"\n",(0,t.jsxs)(o.A,{children:[(0,t.jsx)(i.A,{value:"xaml",label:"XAML",default:!0,children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-xml",children:'  <Grid xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"\r\n        xmlns:local="clr-namespace:Xceed.Wpf.Documentation">\r\n    <Grid.Resources>\r\n      <xcdg:DataGridCollectionViewSource x:Key="cvs_employees"\r\n                                      Source="{Binding Source={x:Static Application.Current},\r\n                                                          Path=Employees}"/>\r\n      <Style x:Key="page_style" TargetType="{x:Type xcdg:DataGridPageControl}">\r\n        <Setter Property="Template">\r\n          <Setter.Value>\r\n            <ControlTemplate TargetType="{x:Type xcdg:DataGridPageControl}">\r\n              <DockPanel>\r\n                <StackPanel xcdg:DataGridPageControl.IsPageHeadersHost="True"\r\n                            DockPanel.Dock="Top"/>\r\n                <StackPanel xcdg:DataGridPageControl.IsPageFootersHost="True"\r\n                            DockPanel.Dock="Top"/>\r\n                <Border BorderThickness="2"\r\n                        BorderBrush="Orange"\r\n                        xcdg:DataGridPageControl.IsDataGridHost="True"\r\n                        DockPanel.Dock="Bottom"/>\r\n              </DockPanel>\r\n            </ControlTemplate>\r\n          </Setter.Value>\r\n        </Setter>\r\n      </Style>\r\n    </Grid.Resources>\r\n    <DockPanel>\r\n      <Button Content="Print Grid"\r\n              Click="PrintGrid"\r\n              DockPanel.Dock="Top"/>\r\n      <xcdg:DataGridControl x:Name="EmployeesGrid"\r\n                            ItemsSource="{Binding Source={StaticResource cvs_employees}}">\r\n        <xcdg:DataGridControl.PrintView>\r\n        <xcdg:PrintTableView PageStyle="{StaticResource page_style}">\r\n            <xcdg:PrintTableView.PageHeaders>\r\n              <DataTemplate>\r\n                <TextBlock Text="Xceed WPF Documentation"\r\n                          HorizontalAlignment="Center"\r\n                          FontWeight="Bold"\r\n                          FontSize="20"/>\r\n              </DataTemplate>\r\n              <DataTemplate>\r\n                <TextBlock Text="Printing Example"\r\n                          HorizontalAlignment="Center"\r\n                          FontSize="16"/>\r\n              </DataTemplate>\r\n            </xcdg:PrintTableView.PageHeaders>\r\n            <xcdg:PrintTableView.PageFooters>\r\n              <DataTemplate>\r\n                <StackPanel HorizontalAlignment="Right"\r\n                            Orientation="Horizontal">\r\n                  <TextBlock Text="Page "/>\r\n                  <TextBlock Text="{xcdg:ViewBinding CurrentPageNumber}"/>\r\n                </StackPanel>  \r\n              </DataTemplate>\r\n            </xcdg:PrintTableView.PageFooters>\r\n          </xcdg:PrintTableView>\r\n        </xcdg:DataGridControl.PrintView>\r\n      </xcdg:DataGridControl>\r\n    </DockPanel>\r\n  </Grid>\n'})})}),(0,t.jsx)(i.A,{value:"csharp",label:"C#",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-csharp",children:'private void PrintGrid( object sender, RoutedEventArgs e )\r\n{\r\n  this.EmployeesGrid.Print( "Employee_Grid", true );\r\n}\n'})})}),(0,t.jsx)(i.A,{value:"vbnet",label:"VB.NET",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-vbnet",children:'  Private Sub PrintGrid( ByVal sender As Object, ByVal e As RoutedEventArgs )\r\n    Me.EmployeeGrid.Print( "Employee_Grid", True )\r\n  End Sub\n'})})})]}),"\n",(0,t.jsx)(r.h3,{id:"exporting-to-excel-excelexporter-class",children:"Exporting to Excel (ExcelExporter Class)"}),"\n",(0,t.jsx)(r.p,{children:"The following example demonstrates how to export the content of a grid to Excel using the ExcelExporter class."}),"\n",(0,t.jsxs)(o.A,{children:[(0,t.jsx)(i.A,{value:"xaml",label:"XAML",default:!0,children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-xml",children:'    <Grid xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid">\r\n      <Grid.Resources>\r\n        <xcdg:DataGridCollectionViewSource x:Key="cvs_orders"\r\n                                            Source="{Binding Source={x:Static Application.Current}, Path=Orders}">\r\n            <xcdg:DataGridCollectionViewSource.GroupDescriptions>\r\n              <xcdg:DataGridGroupDescription PropertyName="ShipCountry" />\r\n            </xcdg:DataGridCollectionViewSource.GroupDescriptions>\r\n          \r\n            <xcdg:DataGridCollectionViewSource.StatFunctions>\r\n              <xcdg:AverageFunction SourcePropertyName="Freight"\r\n                                    ResultPropertyName="average_freight" />\r\n            </xcdg:DataGridCollectionViewSource.StatFunctions>\r\n        </xcdg:DataGridCollectionViewSource>\r\n      </Grid.Resources>\r\n      <DockPanel>\r\n        <Button Content="Export"\r\n                Click="ExportButton_Click"\r\n                DockPanel.Dock="Top" />\r\n        <xcdg:DataGridControl x:Name="OrdersGrid"\r\n                              ItemsSource="{Binding Source={StaticResource cvs_orders}}"\r\n                              AutoCreateDetailConfigurations="True">\r\n            <xcdg:DataGridControl.DefaultGroupConfiguration>\r\n              <xcdg:GroupConfiguration>\r\n                  <xcdg:GroupConfiguration.Footers>\r\n                    <DataTemplate>\r\n                        <xcdg:StatRow>\r\n                          <xcdg:StatCell FieldName="Freight"\r\n                                          ResultPropertyName="average_freight"/>\r\n                        </xcdg:StatRow>\r\n                    </DataTemplate>\r\n                  </xcdg:GroupConfiguration.Footers>\r\n              </xcdg:GroupConfiguration>\r\n            </xcdg:DataGridControl.DefaultGroupConfiguration>\r\n        </xcdg:DataGridControl>\r\n      </DockPanel>\r\n    </Grid>\n'})})}),(0,t.jsx)(i.A,{value:"csharp",label:"C#",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-csharp",children:'    private void ExportButton_Click( object sender, RoutedEventArgs e )\r\n    {\r\n      ExcelExporter exporter = new ExcelExporter( this.OrdersGrid );\r\n      // All details\r\n      exporter.DetailDepth = int.MaxValue;\r\n      // The grid (0) and groups (1)\r\n      exporter.StatFunctionDepth = 1;     \r\n      exporter.ShowStatsInDetails = false;\r\n      exporter.ExportStatFunctionsAsFormulas = false;\r\n      exporter.Export( "d:\\\\orders.xls" );\r\n    }\n'})})}),(0,t.jsx)(i.A,{value:"vbnet",label:"VB.NET",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-vbnet",children:"  Private Sub ExportButton_Click( ByVal sender As Object, ByVal e As RoutedEventArgs )\r\n    Dim exporter As New ExcelExporter( Me.OrdersGrid )\r\n    ' All details\r\n    exporter.DetailDepth = Int.MaxValue\r\n    ' The grid (0) and groups (1)\r\n    exporter.StatFunctionDepth = 1\r\n    exporter.ShowStatsInDetails = False\r\n    exporter.ExportStatFunctionsAsFormulas = False\r\n    exporter.Export( \"d:\\orders.xls\" )\r\n  End Sub\n"})})})]}),"\n",(0,t.jsx)(r.h3,{id:"exporting-to-excel-exporttoexcel-method",children:"Exporting to Excel (ExportToExcel Method)"}),"\n",(0,t.jsx)(r.p,{children:"The following example demonstrates how to export the content of a grid to Excel using the grid's ExportToExcel method."}),"\n",(0,t.jsxs)(o.A,{children:[(0,t.jsx)(i.A,{value:"xaml",label:"XAML",default:!0,children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-xml",children:'  <Grid xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid">\r\n    <Grid.Resources>\r\n      <xcdg:DataGridCollectionViewSource x:Key="cvs_orders"\r\n                                          Source="{Binding Source={x:Static Application.Current}, Path=Orders}">\r\n          <xcdg:DataGridCollectionViewSource.GroupDescriptions>\r\n            <xcdg:DataGridGroupDescription PropertyName="ShipCountry" />\r\n          </xcdg:DataGridCollectionViewSource.GroupDescriptions>\r\n      </xcdg:DataGridCollectionViewSource>\r\n    </Grid.Resources>\r\n    <DockPanel>\r\n      <Button Content="Export"\r\n              Click="ExportButton_Click"\r\n              DockPanel.Dock="Top" />\r\n      <xcdg:DataGridControl x:Name="OrdersGrid"\r\n                            ItemsSource="{Binding Source={StaticResource cvs_orders}}"/>\r\n    </DockPanel>\r\n  </Grid>\n'})})}),(0,t.jsx)(i.A,{value:"csharp",label:"C#",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-csharp",children:'  private void ExportButton_Click( object sender, RoutedEventArgs e )\r\n  {\r\n    this.OrdersGrid.ExportToExcel( "d:\\\\orders.xls" );\r\n  }\n'})})}),(0,t.jsx)(i.A,{value:"vbnet",label:"VB.NET",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-vbnet",children:'  Private Sub ExportButton_Click( ByVal sender As Object, ByVal e As RoutedEventArgs )\r\n    Me.OrdersGrid.ExportToExcel( "d:\\orders.xls" )\r\n  End Sub\n'})})})]}),"\n",(0,t.jsx)(r.h3,{id:"changing-the-group-header-formats",children:"Changing the group-header formats"}),"\n",(0,t.jsx)(r.p,{children:"The following example demonstrates how to change the text that is displayed in the group headers when they are exported to Excel."}),"\n",(0,t.jsxs)(o.A,{children:[(0,t.jsx)(i.A,{value:"xaml",label:"XAML",default:!0,children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-xml",children:'  <Grid xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid">\r\n    <Grid.Resources>\r\n      <xcdg:DataGridCollectionViewSource x:Key="cvs_orders"\r\n                                          Source="{Binding Source={x:Static Application.Current}, Path=Orders}">\r\n          <xcdg:DataGridCollectionViewSource.GroupDescriptions>\r\n            <xcdg:DataGridGroupDescription PropertyName="ShipCountry" />\r\n          </xcdg:DataGridCollectionViewSource.GroupDescriptions>\r\n      </xcdg:DataGridCollectionViewSource>\r\n    </Grid.Resources>\r\n    <DockPanel>\r\n      <Button Content="Export"\r\n              Click="ExportButton_Click"\r\n              DockPanel.Dock="Top" />\r\n      <xcdg:DataGridControl x:Name="OrdersGrid"\r\n                            ItemsSource="{Binding Source={StaticResource cvs_orders}}"/>\r\n    </DockPanel>\r\n  </Grid>\n'})})}),(0,t.jsx)(i.A,{value:"csharp",label:"C#",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-csharp",children:'  private void ExportButton_Click( object sender, RoutedEventArgs e )\r\n  {\r\n    ExcelExporter exporter = new ExcelExporter( this.OrdersGrid );\r\n    exporter.GroupHeaderFormat.Plural = "The {1} group contains {2} items.";\r\n    exporter.GroupHeaderFormat.Single = "The {1} group contains 1 item.";     \r\n    exporter.Export( "d:\\\\orders.xls" );\r\n  }\n'})})}),(0,t.jsx)(i.A,{value:"vbnet",label:"VB.NET",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-vbnet",children:'  Private Sub ExportButton_Click( ByVal sender As Object, ByVal e As RoutedEventArgs )\r\n    Dim exporter As New ExcelExporter( Me.OrdersGrid )\r\n    exporter.GroupHeaderFormat.MultipleItemsFormat = "The {1} group contains {2} items."\r\n    exporter.GroupHeaderFormat.SingleItemFormat = "The {1} group contains 1 item."\r\n    exporter.Export( "d:\\orders.xls" )\r\n  End Sub\n'})})})]})]})}function x(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},9365:(e,r,n)=>{n.d(r,{A:()=>i});n(6540);var t=n(4164);const a={tabItem:"tabItem_Ymn6"};var o=n(4848);function i(e){let{children:r,hidden:n,className:i}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,t.A)(a.tabItem,i),hidden:n,children:r})}},1470:(e,r,n)=>{n.d(r,{A:()=>w});var t=n(6540),a=n(4164),o=n(3104),i=n(6347),l=n(205),s=n(7485),c=n(1682),d=n(679);function u(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:r,children:n}=e;return(0,t.useMemo)((()=>{const e=r??function(e){return u(e).map((e=>{let{props:{value:r,label:n,attributes:t,default:a}}=e;return{value:r,label:n,attributes:t,default:a}}))}(n);return function(e){const r=(0,c.XI)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,n])}function x(e){let{value:r,tabValues:n}=e;return n.some((e=>e.value===r))}function g(e){let{queryString:r=!1,groupId:n}=e;const a=(0,i.W6)(),o=function(e){let{queryString:r=!1,groupId:n}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:r,groupId:n});return[(0,s.aZ)(o),(0,t.useCallback)((e=>{if(!o)return;const r=new URLSearchParams(a.location.search);r.set(o,e),a.replace({...a.location,search:r.toString()})}),[o,a])]}function h(e){const{defaultValue:r,queryString:n=!1,groupId:a}=e,o=p(e),[i,s]=(0,t.useState)((()=>function(e){let{defaultValue:r,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!x({value:r,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const t=n.find((e=>e.default))??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:r,tabValues:o}))),[c,u]=g({queryString:n,groupId:a}),[h,m]=function(e){let{groupId:r}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(r),[a,o]=(0,d.Dv)(n);return[a,(0,t.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),b=(()=>{const e=c??h;return x({value:e,tabValues:o})?e:null})();(0,l.A)((()=>{b&&s(b)}),[b]);return{selectedValue:i,selectValue:(0,t.useCallback)((e=>{if(!x({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),m(e)}),[u,m,o]),tabValues:o}}var m=n(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=n(4848);function f(e){let{className:r,block:n,selectedValue:t,selectValue:i,tabValues:l}=e;const s=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.a_)(),d=e=>{const r=e.currentTarget,n=s.indexOf(r),a=l[n].value;a!==t&&(c(r),i(a))},u=e=>{let r=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=s.indexOf(e.currentTarget)+1;r=s[n]??s[0];break}case"ArrowLeft":{const n=s.indexOf(e.currentTarget)-1;r=s[n]??s[s.length-1];break}}r?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":n},r),children:l.map((e=>{let{value:r,label:n,attributes:o}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:t===r?0:-1,"aria-selected":t===r,ref:e=>s.push(e),onKeyDown:u,onClick:d,...o,className:(0,a.A)("tabs__item",b.tabItem,o?.className,{"tabs__item--active":t===r}),children:n??r},r)}))})}function D(e){let{lazy:r,children:n,selectedValue:o}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(r){const e=i.find((e=>e.props.value===o));return e?(0,t.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:i.map(((e,r)=>(0,t.cloneElement)(e,{key:r,hidden:e.props.value!==o})))})}function P(e){const r=h(e);return(0,v.jsxs)("div",{className:(0,a.A)("tabs-container",b.tabList),children:[(0,v.jsx)(f,{...r,...e}),(0,v.jsx)(D,{...r,...e})]})}function w(e){const r=(0,m.A)();return(0,v.jsx)(P,{...e,children:u(e.children)},String(r))}},8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>l});var t=n(6540);const a={},o=t.createContext(a);function i(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);