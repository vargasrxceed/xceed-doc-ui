"use strict";(self.webpackChunkxceed_doc_ui=self.webpackChunkxceed_doc_ui||[]).push([[994],{2668:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>a,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var i=r(4848),n=r(8453);const s={},d="Migrating from Version 3.0",l={id:"migrating-from-prev/04",title:"Migrating from Version 3.0",description:"Support for data virtualization required the creation of a new collection view. Since this new virtualizing collection view (DataGridVirtualizingCollectionView) shares members with the non-virtualizing collection view (DataGridCollectionView), a new base class was created (DataGridCollectionViewBase) to expose the shared members (see Table 1). The same structure was required for the XAML representations of the collection views, resulting in the creation of the DataGridCollectionViewSourceBase class, which is the base class for the DataGridCollectionViewSource and DataGridVirtualizingCollectionViewSource classes (see Table 2).",source:"@site/datagrid/migrating-from-prev/04.md",sourceDirName:"migrating-from-prev",slug:"/migrating-from-prev/04",permalink:"/xceed-doc-ui/datagrid/migrating-from-prev/04",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebardatagrid",previous:{title:"Migrating from Version 3.1",permalink:"/xceed-doc-ui/datagrid/migrating-from-prev/03"},next:{title:"Migrating from Version 2.x",permalink:"/xceed-doc-ui/datagrid/migrating-from-prev/05"}},o={},c=[{value:"Obsolete Members",id:"obsolete-members",level:2}];function h(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"migrating-from-version-30",children:"Migrating from Version 3.0"})}),"\n",(0,i.jsx)(t.p,{children:"Support for data virtualization required the creation of a new collection view. Since this new virtualizing collection view (DataGridVirtualizingCollectionView) shares members with the non-virtualizing collection view (DataGridCollectionView), a new base class was created (DataGridCollectionViewBase) to expose the shared members (see Table 1). The same structure was required for the XAML representations of the collection views, resulting in the creation of the DataGridCollectionViewSourceBase class, which is the base class for the DataGridCollectionViewSource and DataGridVirtualizingCollectionViewSource classes (see Table 2)."}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Table 1:"})," Members moved from the DataGridCollectionView class to the DataGridCollectionViewBase class"]}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Methods"}),(0,i.jsx)(t.th,{children:"Properties"}),(0,i.jsx)(t.th,{children:"Events"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"AddNew method"}),(0,i.jsx)(t.td,{children:"AutoCreateDetailDescriptions property"}),(0,i.jsx)(t.td,{children:"BeginningEdit event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"CancelEdit method"}),(0,i.jsx)(t.td,{children:"AutoCreateItemProperties property"}),(0,i.jsx)(t.td,{children:"CancelingEdit event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"CancelNew method"}),(0,i.jsx)(t.td,{children:"AutoFilterMode property"}),(0,i.jsx)(t.td,{children:"CancelingNewItem event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"CommitEdit method"}),(0,i.jsx)(t.td,{children:"AutoFilterValues property"}),(0,i.jsx)(t.td,{children:"CommittingNewItem event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"CommitNew method"}),(0,i.jsx)(t.td,{children:"CanFilter property"}),(0,i.jsx)(t.td,{children:"CreatingNewItem event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"DeferRefresh method"}),(0,i.jsx)(t.td,{children:"CanSort property"}),(0,i.jsx)(t.td,{children:"EditBegun event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"EditItem method"}),(0,i.jsx)(t.td,{children:"Culture property"}),(0,i.jsx)(t.td,{children:"EditCanceled event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"GetDistinctValues method"}),(0,i.jsx)(t.td,{children:"CurrentAddItem property"}),(0,i.jsx)(t.td,{children:"EditCommitted event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"PassesFilter method"}),(0,i.jsx)(t.td,{children:"CurrentEditItem property"}),(0,i.jsx)(t.td,{children:"InitializingNewItem event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Refresh method"}),(0,i.jsx)(t.td,{children:"DetailDescriptions property"}),(0,i.jsx)(t.td,{children:"ItemRemoved event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Remove method"}),(0,i.jsx)(t.td,{children:"DistinctValues property"}),(0,i.jsx)(t.td,{children:"NewItemCanceled event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"RemoveAt method"}),(0,i.jsx)(t.td,{children:"DistinctValuesConstraint property"}),(0,i.jsx)(t.td,{children:"NewItemCommitted event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"Filter property"}),(0,i.jsx)(t.td,{children:"NewItemCreated event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"IsEditingItem property"}),(0,i.jsx)(t.td,{children:"RemovingItem event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"ItemProperties property"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"ItemType property"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"NeedsRefresh property"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"ParentDetailDescription property"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"SortDescriptions property"}),(0,i.jsx)(t.td,{})]})]})]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Table 2:"})," Members moved from the DataGridCollectionViewSource class to the ",(0,i.jsx)(t.code,{children:"DataGridCollectionViewSourceBase"})," class"]}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Properties"}),(0,i.jsx)(t.th,{children:"Events"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"AutoCreateItemProperties property"}),(0,i.jsx)(t.td,{children:"BeginningEdit event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"AutoFilterMode property"}),(0,i.jsx)(t.td,{children:"CancelingEdit event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Culture property"}),(0,i.jsx)(t.td,{children:"CancelingNewItem event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"DefaultCalculateDisctinctValues property"}),(0,i.jsx)(t.td,{children:"CommittingNewItem event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"DetailDescriptions property"}),(0,i.jsx)(t.td,{children:"CreatingNewItem event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"DistinctValuesConstraint property"}),(0,i.jsx)(t.td,{children:"EditBegun event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ItemProperties property"}),(0,i.jsx)(t.td,{children:"EditCanceled event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ItemType property"}),(0,i.jsx)(t.td,{children:"EditCommitted event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Source property"}),(0,i.jsx)(t.td,{children:"InitializingNewItem event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"ItemRemoved event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"NewItemCanceled event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"NewItemCommitted event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"NewItemCreated event"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"RemovingItem event"})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"obsolete-members",children:"Obsolete Members"}),"\n",(0,i.jsxs)(t.p,{children:["As of version 3.1, the ",(0,i.jsx)(t.strong,{children:"IsAddingItem"})," property exposed by the ",(0,i.jsx)(t.code,{children:"DataGridCollectionView"})," class was rendered obsolete and replaced with the ",(0,i.jsx)(t.strong,{children:"IsAddingNew"})," property on the ",(0,i.jsx)(t.code,{children:"DataGridCollectionViewBase"})," class to support the eventual implementation of the ",(0,i.jsx)(t.code,{children:"IEditableCollectionView"})," interface."]})]})}function a(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>d,x:()=>l});var i=r(6540);const n={},s=i.createContext(n);function d(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);