"use strict";(self.webpackChunkxceed_doc_ui=self.webpackChunkxceed_doc_ui||[]).push([[5479],{5501:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>p,frontMatter:()=>l,metadata:()=>c,toc:()=>u});var a=r(4848),n=r(8453),s=r(1470),i=r(9365);const l={},d="Creating Your First Datagrid Project",c={id:"getting-started/03",title:"Creating Your First Datagrid Project",description:"The installer will copy all the necessary files into the product's installation folder (usually in [Installation Folder]\\Xceed\\Xceed DataGrid for WPF v[VERSION]) as well as place a copy of the Xceed DataGrid for WPF assemblies (Xceed.Wpf.DataGrid.dll) in the global assembly cache.",source:"@site/docs/getting-started/03.md",sourceDirName:"getting-started",slug:"/getting-started/03",permalink:"/xceed-doc-ui/docs/getting-started/03",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Creating Your First Toolkit Plus for WPF Project",permalink:"/xceed-doc-ui/docs/getting-started/02"},next:{title:"Creating Your First ListBox Project",permalink:"/xceed-doc-ui/docs/getting-started/04"}},o={},u=[{value:"Adding the Component References to Visual Studio",id:"adding-the-component-references-to-visual-studio",level:2},{value:"Namespace Mapping",id:"namespace-mapping",level:2},{value:"Binding",id:"binding",level:2}];function h(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"creating-your-first-datagrid-project",children:"Creating Your First Datagrid Project"})}),"\n",(0,a.jsx)(t.p,{children:"The installer will copy all the necessary files into the product's installation folder (usually in [Installation Folder]\\Xceed\\Xceed DataGrid for WPF v[VERSION]) as well as place a copy of the Xceed DataGrid for WPF assemblies (Xceed.Wpf.DataGrid.dll) in the global assembly cache."}),"\n",(0,a.jsx)(t.h2,{id:"adding-the-component-references-to-visual-studio",children:"Adding the Component References to Visual Studio"}),"\n",(0,a.jsx)(t.p,{children:"In order to begin using Xceed DataGrid for WPF, its assemblies must be referenced in your project using the following steps:"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:'Select the "Add Reference..." option from the "Project" menu to open the "Add Reference" dialog box.'}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:'Select the ".NET" tab, browse to the "Xceed DataGrid for WPF" assembly and select it. To use the Office 2007 themes, the corresponding assembly must also be included.'}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:'Press "OK" to add the assemblies to your project\'s references.'}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"namespace-mapping",children:"Namespace Mapping"}),"\n",(0,a.jsxs)(t.p,{children:["Once the assemblies have been added to your project, the namespace maps that are to be used must be declared. In XAML this is done using the xmlns attribute. If the DataGridControl control has been added to a design surface, the ",(0,a.jsx)(t.strong,{children:"xmlns"})," attribute is automatically added."]}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Namespace"}),(0,a.jsx)(t.th,{children:"Description"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Xceed.Wpf.DataGrid"}),(0,a.jsxs)(t.td,{children:["The Xceed.Wpf.DataGrid namespace regroups all the classes that are required by the ",(0,a.jsx)(t.strong,{children:"DataGridControl"})," class to edit and display data."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Xceed.Wpf.DataGrid.Converters"}),(0,a.jsx)(t.td,{children:"The Xceed.Wpf.DataGrid.Converters namespace regroups all the converter classes."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Xceed.Wpf.DataGrid.Markup"}),(0,a.jsx)(t.td,{children:"The Xceed.Wpf.DataGrid.Markup namespace regroups the XAML-specific classes."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Xceed.Wpf.DataGrid.ValidationRules"}),(0,a.jsx)(t.td,{children:"The Xceed.Wpf.DataGrid.ValidationRules namespace regroups all the validation rule classes."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Xceed.Wpf.DataGrid.Views"}),(0,a.jsxs)(t.td,{children:["The Xceed.Wpf.DataGrid.Views namespace regroups all the classes which are required to apply views and themes to a ",(0,a.jsx)(t.strong,{children:"DataGridControl"}),"."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Xceed.Wpf.DataGrid.Settings"}),(0,a.jsxs)(t.td,{children:["The ",(0,a.jsx)(t.strong,{children:"Xceed.Wpf.DataGrid.Settings"})," namespace regroups all the classes, enumerations, and structures required to persist the settings of a grid and its elements."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Xceed.Wpf.DataGrid.Automation"}),(0,a.jsxs)(t.td,{children:["The ",(0,a.jsx)(t.strong,{children:"Xceed.Wpf.DataGrid.Automation"})," namespace contains all the classes that are required to support UI automation."]})]})]})]}),"\n",(0,a.jsx)(t.p,{children:"In C# or VB.NET, the using and Imports directives can be used to create aliases for the namespaces listed in Table 1. If Xceed DataGrid for WPF is being used in either of these development languages the Xceed.Wpf.DataGrid.Markup namespace can be omitted as it contains XAML-specific classes."}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(i.A,{value:"csharp",label:"C#",default:!0,children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:"  using Xceed.Wpf.DataGrid;\r\n  using Xceed.Wpf.DataGrid.Converters;\r\n  using Xceed.Wpf.DataGrid.ValidationRules;\r\n  using Xceed.Wpf.DataGrid.Views;\r\n  using Xceed.Wpf.DataGrid.Settings;\n"})})}),(0,a.jsx)(i.A,{value:"vb.net",label:"Visual Basic .NET",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-vb.NET",children:"  Imports Xceed.Wpf.DataGrid\r\n  Imports Xceed.Wpf.DataGrid.Converters\r\n  Imports Xceed.Wpf.DataGrid.Views\r\n  Imports Xceed.Wpf.DataGrid.Settings\n"})})})]}),"\n",(0,a.jsx)(t.h2,{id:"binding",children:"Binding"}),"\n",(0,a.jsxs)(t.p,{children:["The last step is to add a grid to your page or window. The examples found throughout the documentation usually place the grid inside a ",(0,a.jsx)(t.strong,{children:"Grid"}),", as demonstrated in the following example."]}),"\n",(0,a.jsxs)(t.p,{children:['This first code example demonstrates how to create a connection to the Access version of the Northwind database and create a property named "Orders" to which the grid will be bound. The code should be placed in the ',(0,a.jsx)(t.strong,{children:"App.xaml.cs"})," file."]}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(i.A,{value:"csharp",label:"C#",default:!0,children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-c#",children:'  public partial class App : Application\r\n  {\r\n    public DataSet Data\r\n    {\r\n      get; set;\r\n    }\r\n    public DataTable Orders\r\n    {\r\n      get; set;\r\n    }\r\n    protected override void OnStartup( StartupEventArgs e )\r\n    {\r\n      // Set the licence key\r\n      Xceed.Wpf.DataGrid.Licenser.LicenseKey = "Enter your license key here";\r\n      Data = Xceed.Wpf.DataGrid.Samples.SampleData.DataProvider.GetNorthwindDataSet();\r\n      Orders = Data.Tables[ "Orders" ];\r\n      base.OnStartup( e );\r\n    }\r\n  }\r\n\n'})})}),(0,a.jsx)(i.A,{value:"vb.net",label:"Visual Basic .NET",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-vb",children:'  Public Partial Class App\r\n    Inherits Application\r\n\r\n    Public Property Data As DataSet\r\n    Public Property Orders As DataTable\r\n\r\n    Protected Overrides Sub OnStartup(ByVal e As StartupEventArgs)\r\n          \' Set the licence key\r\n          Xceed.Wpf.DataGrid.Licenser.LicenseKey = "Enter your license key here"\r\n          Data = Xceed.Wpf.DataGrid.Samples.SampleData.DataProvider.GetNorthwindDataSet()\r\n          Orders = Data.Tables("Orders")\r\n          MyBase.OnStartup(e)\r\n    End Sub\r\n  End Class\r\n  \n'})})})]}),"\n",(0,a.jsx)(t.p,{children:"The next example demonstrates how to bind a grid to the Orders table, which is retrieved through the Orders property implemented in the code above."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-xml",children:'  <Grid xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid">\r\n    <Grid.Resources>      \r\n    <xcdg:DataGridCollectionViewSource x:Key="cvs_orders"\r\n                                    Source="{Binding Source={x:Static Application.Current},\r\n                                                        Path=Orders}"/>\r\n    </Grid.Resources>\r\n    <xcdg:DataGridControl x:Name="OrdersGrid"\r\n                          ItemsSource="{Binding Source={StaticResource cvs_orders}}"/>\r\n  </Grid>\n'})})]})}function p(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},9365:(e,t,r)=>{r.d(t,{A:()=>i});r(6540);var a=r(4164);const n={tabItem:"tabItem_Ymn6"};var s=r(4848);function i(e){let{children:t,hidden:r,className:i}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(n.tabItem,i),hidden:r,children:t})}},1470:(e,t,r)=>{r.d(t,{A:()=>y});var a=r(6540),n=r(4164),s=r(3104),i=r(6347),l=r(205),d=r(7485),c=r(1682),o=r(679);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:r}=e;return(0,a.useMemo)((()=>{const e=t??function(e){return u(e).map((e=>{let{props:{value:t,label:r,attributes:a,default:n}}=e;return{value:t,label:r,attributes:a,default:n}}))}(r);return function(e){const t=(0,c.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function p(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:r}=e;const n=(0,i.W6)(),s=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,d.aZ)(s),(0,a.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(n.location.search);t.set(s,e),n.replace({...n.location,search:t.toString()})}),[s,n])]}function m(e){const{defaultValue:t,queryString:r=!1,groupId:n}=e,s=h(e),[i,d]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=r.find((e=>e.default))??r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:s}))),[c,u]=f({queryString:r,groupId:n}),[m,g]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,s]=(0,o.Dv)(r);return[n,(0,a.useCallback)((e=>{r&&s.set(e)}),[r,s])]}({groupId:n}),b=(()=>{const e=c??m;return p({value:e,tabValues:s})?e:null})();(0,l.A)((()=>{b&&d(b)}),[b]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);d(e),u(e),g(e)}),[u,g,s]),tabValues:s}}var g=r(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=r(4848);function j(e){let{className:t,block:r,selectedValue:a,selectValue:i,tabValues:l}=e;const d=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),o=e=>{const t=e.currentTarget,r=d.indexOf(t),n=l[r].value;n!==a&&(c(t),i(n))},u=e=>{let t=null;switch(e.key){case"Enter":o(e);break;case"ArrowRight":{const r=d.indexOf(e.currentTarget)+1;t=d[r]??d[0];break}case"ArrowLeft":{const r=d.indexOf(e.currentTarget)-1;t=d[r]??d[d.length-1];break}}t?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.A)("tabs",{"tabs--block":r},t),children:l.map((e=>{let{value:t,label:r,attributes:s}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>d.push(e),onKeyDown:u,onClick:o,...s,className:(0,n.A)("tabs__item",b.tabItem,s?.className,{"tabs__item--active":a===t}),children:r??t},t)}))})}function v(e){let{lazy:t,children:r,selectedValue:s}=e;const i=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===s));return e?(0,a.cloneElement)(e,{className:(0,n.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:i.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==s})))})}function D(e){const t=m(e);return(0,x.jsxs)("div",{className:(0,n.A)("tabs-container",b.tabList),children:[(0,x.jsx)(j,{...t,...e}),(0,x.jsx)(v,{...t,...e})]})}function y(e){const t=(0,g.A)();return(0,x.jsx)(D,{...e,children:u(e.children)},String(t))}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>l});var a=r(6540);const n={},s=a.createContext(n);function i(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);