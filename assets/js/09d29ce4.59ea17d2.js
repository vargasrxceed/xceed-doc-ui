"use strict";(self.webpackChunkxceed_doc_ui=self.webpackChunkxceed_doc_ui||[]).push([[2027],{8888:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var r=i(4848),o=i(8453);const s={},n="View Properties",a={id:"datagrid/views-themes/views/03",title:"View Properties",description:"The ViewProperty attribute, which is set on various view properties, determines how or if the view property on which it is set can be accessed through a ViewBinding. If set to None or if the attribute is not set at all, the property cannot be accessed through a ViewBinding. If set to ViewOnly, the property will be accessible through a ViewBinding. Setting the ViewProperty attribute to Routed or RoutedNoFallback, allows an attached property to be accessed through a ViewBinding.",source:"@site/docs/datagrid/views-themes/views/03.md",sourceDirName:"datagrid/views-themes/views",slug:"/datagrid/views-themes/views/03",permalink:"/xceed-doc-ui/docs/datagrid/views-themes/views/03",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Column Positions and Widths",permalink:"/xceed-doc-ui/docs/datagrid/views-themes/views/02"},next:{title:"Tableflow View: Smooth Scrolling and Other Animated Effects",permalink:"/xceed-doc-ui/docs/datagrid/views-themes/views/04"}},c={},d=[];function h(e){const t={code:"code",h1:"h1",header:"header",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"view-properties",children:"View Properties"})}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"ViewProperty"})," attribute, which is set on various view properties, determines how or if the view property on which it is set can be accessed through a ",(0,r.jsx)(t.strong,{children:"ViewBinding"}),". If set to None or if the attribute is not set at all, the property cannot be accessed through a ",(0,r.jsx)(t.strong,{children:"ViewBinding"}),". If set to ViewOnly, the property will be accessible through a ",(0,r.jsx)(t.strong,{children:"ViewBinding"}),". Setting the ",(0,r.jsx)(t.code,{children:"ViewProperty"})," attribute to Routed or ",(0,r.jsx)(t.code,{children:"RoutedNoFallback"}),", allows an attached property to be accessed through a ",(0,r.jsx)(t.strong,{children:"ViewBinding"}),"."]})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>n,x:()=>a});var r=i(6540);const o={},s=r.createContext(o);function n(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:n(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);