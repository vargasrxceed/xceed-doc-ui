"use strict";(self.webpackChunkxceed_doc_ui=self.webpackChunkxceed_doc_ui||[]).push([[4882],{6020:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>s,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(4848),a=n(8453);const i={},o="Providing a Default Detail Configuration",l={id:"code-snippets/21",title:"Providing a Default Detail Configuration",description:"The following example demonstrates how to provide a default detail configuration that will be applied to all details in a grid and any descendant details for which an explicit detail configuration has not been provided.",source:"@site/datagrid/code-snippets/21.md",sourceDirName:"code-snippets",slug:"/code-snippets/21",permalink:"/xceed-doc-ui/datagrid/code-snippets/21",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebardatagrid",previous:{title:"Printing and Exporting",permalink:"/xceed-doc-ui/datagrid/code-snippets/20"},next:{title:"Providing a Detail Configuration Item-container Style",permalink:"/xceed-doc-ui/datagrid/code-snippets/22"}},d={},c=[];function u(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"providing-a-default-detail-configuration",children:"Providing a Default Detail Configuration"})}),"\n",(0,r.jsx)(t.p,{children:"The following example demonstrates how to provide a default detail configuration that will be applied to all details in a grid and any descendant details for which an explicit detail configuration has not been provided."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-xml",children:'<Grid>\r\n  <Grid.Resources>\r\n     <xcdg:DataGridCollectionViewSource x:Key="cvs_employees"\r\n                                        Source="{Binding Source={x:Static Application.Current}, Path=Employees}" />\r\n  \r\n     <xcdg:IndexToOddConverter x:Key="rowIndexConverter" />\r\n  \r\n     <Style x:Key="alternatingDataRowStyle"\r\n            TargetType="{x:Type xcdg:DataRow}">\r\n        <Style.Triggers>\r\n           <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},\r\n                             Path=(xcdg:DataGridVirtualizingPanel.ItemIndex),\r\n                             Converter={StaticResource rowIndexConverter}}"\r\n                        Value="True">\r\n              <Setter Property="Background"\r\n                      Value="AliceBlue" />\r\n           </DataTrigger>\r\n        </Style.Triggers>\r\n     </Style>\r\n \r\n  </Grid.Resources>\r\n  <xcdg:DataGridControl x:Name="EmployeesGrid"\r\n                      ItemsSource="{Binding Source={StaticResource cvs_employees}}"\r\n                      ItemsSourceName="Employee Information"\r\n                      AutoCreateDetailConfigurations="True">\r\n    <xcdg:DataGridControl.DefaultDetailConfiguration>\r\n       <xcdg:DefaultDetailConfiguration UseDefaultHeadersFooters="False"\r\n                                        ItemContainerStyle="{StaticResource alternatingDataRowStyle}"\r\n                                        xcdg:TableView.ShowFixedColumnSplitter="False">\r\n          <xcdg:DefaultDetailConfiguration.DefaultGroupConfiguration>\r\n             <xcdg:GroupConfiguration InitiallyExpanded="False" />\r\n          </xcdg:DefaultDetailConfiguration.DefaultGroupConfiguration>\r\n          <xcdg:DefaultDetailConfiguration.Headers>\r\n             <DataTemplate>\r\n                <DockPanel>\r\n                   <xcdg:HierarchicalGroupLevelIndicatorPane  xcdg:GroupLevelIndicatorPane.ShowIndicators="False"\r\n                                                              xcdg:TableView.CanScrollHorizontally="False"\r\n                                                              DockPanel.Dock="Left" />\r\n                   <ContentPresenter Content="{Binding RelativeSource={RelativeSource Self},\r\n                                     Path=(xcdg:DataGridControl.DataGridContext).SourceDetailConfiguration.Title}"\r\n                             ContentTemplate="{Binding RelativeSource={RelativeSource Self},\r\n                             Path=(xcdg:DataGridControl.DataGridContext).SourceDetailConfiguration.TitleTemplate}" />\r\n                </DockPanel>\r\n             </DataTemplate>\r\n             <DataTemplate>\r\n                <xcdg:ColumnManagerRow AllowColumnReorder="False"\r\n                                       AllowSort="False" />\r\n             </DataTemplate>\r\n          </xcdg:DefaultDetailConfiguration.Headers>\r\n          <xcdg:DefaultDetailConfiguration.Footers>\r\n             <DataTemplate>\r\n                <xcdg:InsertionRow Background="Cornsilk" />\r\n             </DataTemplate>\r\n          </xcdg:DefaultDetailConfiguration.Footers>\r\n          <xcdg:DefaultDetailConfiguration.DetailIndicatorStyle>\r\n             <Style TargetType="{x:Type xcdg:DetailIndicator}">\r\n                <Setter Property="Background"\r\n                        Value="AliceBlue" />\r\n             </Style>\r\n          </xcdg:DefaultDetailConfiguration.DetailIndicatorStyle>\r\n       </xcdg:DefaultDetailConfiguration>\r\n    </xcdg:DataGridControl.DefaultDetailConfiguration>\r\n </xcdg:DataGridControl>\r\n</Grid>\n'})})]})}function s(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var r=n(6540);const a={},i=r.createContext(a);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);