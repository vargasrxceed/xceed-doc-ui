"use strict";(self.webpackChunkxceed_doc_ui=self.webpackChunkxceed_doc_ui||[]).push([[5521],{5997:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>l,metadata:()=>d,toc:()=>h});var t=r(4848),i=r(8453),s=r(1470),a=r(9365);const l={},o="Selecting Data",d={id:"listbox/06",title:"Selecting Data",description:"Items in a listbox can be selected both through end-user interactions and programmatically. The SelectionMode property defines how the items in a listbox can be selected through end-user interactions. SelectionMode.Single (default) indicates that only one item can be selected at a time. Multiple indicates that multiple items can be selected without pressing the CTRL or SHIFT modifier keys. Extended indicates that multiple items can be selected by pressing a modifier key.",source:"@site/docs/listbox/06.md",sourceDirName:"listbox",slug:"/listbox/06",permalink:"/xceed-doc-ui/docs/listbox/06",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Grouping Data",permalink:"/xceed-doc-ui/docs/listbox/05"},next:{title:"Sorting Data",permalink:"/xceed-doc-ui/docs/listbox/07"}},c={},h=[{value:"Retrieving the Selected Items",id:"retrieving-the-selected-items",level:2},{value:"Selecting Items Programmatically",id:"selecting-items-programmatically",level:2},{value:"Selection-Changed Notifications",id:"selection-changed-notifications",level:2}];function u(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"selecting-data",children:"Selecting Data"})}),"\n",(0,t.jsxs)(n.p,{children:["Items in a listbox can be selected both through end-user interactions and programmatically. The ",(0,t.jsx)(n.code,{children:"SelectionMode"})," property defines how the items in a listbox can be selected through end-user interactions. ",(0,t.jsx)(n.code,{children:"SelectionMode.Single"})," (default) indicates that only one item can be selected at a time. ",(0,t.jsx)(n.strong,{children:"Multiple"})," indicates that multiple items can be selected without pressing the ",(0,t.jsx)(n.strong,{children:"CTRL"})," or ",(0,t.jsx)(n.strong,{children:"SHIFT"})," modifier keys. ",(0,t.jsx)(n.strong,{children:"Extended"})," indicates that multiple items can be selected by pressing a modifier key."]}),"\n",(0,t.jsx)(n.h2,{id:"retrieving-the-selected-items",children:"Retrieving the Selected Items"}),"\n",(0,t.jsxs)(n.p,{children:["By using the ",(0,t.jsx)(n.code,{children:"BeginGetSelectedItems"})," and ",(0,t.jsx)(n.code,{children:"EndGetSelectedItems"}),' asynchronous methods, the items that are currently selected in a listbox can be retrieved. When dealing with a local data source (i.e., "full list"), the ',(0,t.jsx)(n.code,{children:"BeginGetSelectedItems"})," method will return immediately and the value of the IsCompleted property of the returned ",(0,t.jsx)(n.code,{children:"IAsyncResult"})," will be true, indicating that the operation has been completed. The ",(0,t.jsx)(n.code,{children:"EndGetSelectedItems"})," method can then be called to finalize the process and get the selected items. If a virtualized data source is used, the ",(0,t.jsx)(n.code,{children:"EndGetSelectedItems"})," method needs to be called in the callback after verifying whether the operation completed synchronously or not."]}),"\n",(0,t.jsxs)(s.A,{children:[(0,t.jsx)(a.A,{value:"csharp",label:"C#",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"  private void GetSelectedItems()\r\n  {\r\n    IAsyncResult result = this.listBox.BeginGetSelectedItems( new AsyncCallback( this.ProcessSelectedItems ), null );\r\n    if( result.IsCompleted )\r\n        IEnumerable<object> selectedItems = this.listBox.EndGetSelectedItems( result );\r\n  }\r\n\r\n  private void ProcessSelectedItems( IAsyncResult result )\r\n  {\r\n    if( result.CompletedSynchronously )\r\n        return;\r\n    IEnumerable<object> selectedItems = this.listBox.EndGetSelectedItems( result );\r\n  }\n"})})}),(0,t.jsx)(a.A,{value:"vbnet",label:"VB.NET",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-vbnet",children:"Private Sub GetSelectedItems()\r\n  Dim result As IAsyncResult = Me.listBox.BeginGetSelectedItems( New AsyncCallback( AddressOf Me.ProcessSelectedItems ), Nothing )\r\n  If( result.IsCompleted ) Then\r\n      Dim selectedItems As IEnumerable( Of Object ) = Me.listBox.EndGetSelectedItems( result )\r\n  End If\r\nEnd Sub\r\n\r\nPrivate Sub ProcessSelectedItems( ByVal result As IAsyncResult )\r\n  If( result.CompletedSynchronously ) Then\r\n      Return\r\n  End If\r\n  Dim selectedItems As IEnumerable( Of Object )  = Me.listBox.EndGetSelectedItems( result )\r\nEnd Sub\n"})})})]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"SelectedItems"}),", ",(0,t.jsx)(n.code,{children:"SelectedItem"}),", ",(0,t.jsx)(n.code,{children:"SelectedValue"}),", and ",(0,t.jsx)(n.code,{children:"SelectedValuePath"})," properties should only be used with sources that are not data-virtualized (asynchronous): the ",(0,t.jsx)(n.code,{children:"BeginGetSelectedItems"})," and ",(0,t.jsx)(n.code,{children:"EndGetSelectedItems"})," methods should be used instead if the data source is data-virtualized (asynchronous). If used with an asynchronous source, ",(0,t.jsx)(n.code,{children:"SelectedItems"})," will throw an exception, ",(0,t.jsx)(n.code,{children:"SelectedItem"})," and ",(0,t.jsx)(n.code,{children:"SelectedValue"})," will always return null, and ",(0,t.jsx)(n.code,{children:"SelectedValuePath"})," will have no effect."]}),"\n",(0,t.jsx)(n.h2,{id:"selecting-items-programmatically",children:"Selecting Items Programmatically"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Items"})," can be selected by adding selection ranges to a listbox's ",(0,t.jsx)(n.code,{children:"SelectedRanges"})," property. Each range that is added to the collection represents a group of items that have matched one or more selection criteria. Programmatically, a selection range can only be created if the data it is working with is sorted. In order to sort the data, one or more ",(0,t.jsx)(n.code,{children:"SortDescription"})," objects, which will be used to create the data query that is sent to the data source, must be provided at construction time."]}),"\n",(0,t.jsxs)(n.p,{children:['A selection range defines "start" and "end" range-information dictionaries that specify the start and end points of a range of selected items. For each start/end range-information dictionary combination that is added to the selection range, a corresponding sort description, whose ',(0,t.jsx)(n.code,{children:"PropertyName"})," property value matches the key of the start/end range-information dictionary combination, must also be provided (see examples below)."]}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"The sort descriptions used by a selection range have no impact on how the data is actually sorted in the listbox and vice-versa."})}),"\n",(0,t.jsxs)(n.p,{children:["In addition, both the start/end range-information dictionaries (i.e., ",(0,t.jsx)(n.code,{children:"StartRangeInfos"})," and ",(0,t.jsx)(n.code,{children:"EndRangeInfos"}),", ",(0,t.jsx)(n.code,{children:"respectively"}),") expose an ",(0,t.jsx)(n.code,{children:"IsInclusive"})," property that determines whether the start or end range-information dictionaries are inclusive, indicating that their values are included in the selection range (default), or if they are excluded from the selection range. These properties apply to all the range-information dictionary combinations specified in the ",(0,t.jsx)(n.code,{children:"StartRangeInfos"})," and ",(0,t.jsx)(n.code,{children:"EndRangeInfos"})," dictionaries."]}),"\n",(0,t.jsxs)(n.admonition,{type:"warning",children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Predicates"})," (i.e., filter parameter in the SelectionRange ctors) are executed locally meaning that when the ",(0,t.jsx)(n.code,{children:"BeginGetSelectedItems"})," and ",(0,t.jsx)(n.code,{children:"EndGetSelectedItems"})," are called and a selection range that provides a predicate is used, items will be retrieved from the server in order to determine those that pass the filter."]}),(0,t.jsx)(n.p,{children:"If one or more start and end range information dictionary is provided and/or a filter expression, only the items that are not already excluded by the range information and filter expression will be retrieved."}),(0,t.jsx)(n.p,{children:"In a virtualized environment, it is not recommended to use the filter predicate unless dealing with a very limited number of items."})]}),"\n",(0,t.jsx)(n.p,{children:"Items can also be unselected by creating a selection range and setting its SelectionType property to Unselect (see Unselecting items from a selection range example below)."}),"\n",(0,t.jsx)(n.p,{children:"The following examples cover most, if not all, possible scenarios."}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"Selecting all items"}),(0,t.jsxs)(s.A,{children:[(0,t.jsx)(a.A,{value:"csharp",label:"C#",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"  this.listBox.SelectedRanges.Clear();\r\n  this.listBox.SelectedRanges.Add( SelectionRange.All );\n"})})}),(0,t.jsx)(a.A,{value:"vbnet",label:"VB.NET",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-vbnet",children:"Me.listBox.SelectedRanges.Clear()\r\nMe.listBox.SelectedRanges.Add( SelectionRange.All )\n"})})})]})]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:'Selecting specific items (ShipCountry = "Germany")'}),(0,t.jsxs)(s.A,{children:[(0,t.jsx)(a.A,{value:"csharp",label:"C#",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'  SelectionRange range = new SelectionRange( new SortDescription[] { new SortDescription( "ShipCountry", ListSortDirection.Ascending ) }, null, null );\r\n  \r\n  range.StartRangeInfos.Add( "ShipCountry", "Germany" );\r\n  range.EndRangeInfos.Add( "ShipCountry", "Germany" );\r\n  \r\n  this.listBox.SelectedRanges.Clear();\r\n  this.listBox.SelectedRanges.Add( range );\n'})})}),(0,t.jsx)(a.A,{value:"vbnet",label:"VB.NET",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-vbnet",children:'  Dim range As New SelectionRange( New SortDescription() { New SortDescription( "ShipCountry", ListSortDirection.Ascending ) }, Nothing, Nothing)\r\n  \r\n  range.StartRangeInfos.Add( "ShipCountry", "Germany" )\r\n  range.EndRangeInfos.Add( "ShipCountry", "Germany" )\r\n  \r\n  Me.listBox.SelectedRanges.Clear()\r\n  Me.listBox.SelectedRanges.Add( range )\n'})})})]})]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:'Selecting items within a range (ShipCountry = "A-M")'}),(0,t.jsxs)(s.A,{children:[(0,t.jsx)(a.A,{value:"csharp",label:"C#",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'SelectionRange range = new SelectionRange( new SortDescription[] { new SortDescription( "ShipCountry", ListSortDirection.Ascending ) }, null, null );\r\n\r\nrange.StartRangeInfos.Add( "ShipCountry", "A" );\r\nrange.EndRangeInfos.Add( "ShipCountry", "N" );\r\n\r\nrange.EndRangeInfos.IsInclusive = false;\r\n\r\nthis.listBox.SelectedRanges.Clear();\r\nthis.listBox.SelectedRanges.Add( range );\n'})})}),(0,t.jsx)(a.A,{value:"vbnet",label:"VB.NET",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-vbnet",children:'Dim range As New SelectionRange( New SortDescription() { new SortDescription( "ShipCountry", ListSortDirection.Ascending ) }, Nothing, Nothing )\r\n\r\nrange.StartRangeInfos.Add( "ShipCountry", "A" )\r\nrange.EndRangeInfos.Add( "ShipCountry", "N" )\r\n\r\nrange.EndRangeInfos.IsInclusive = False\r\n\r\nMe.listBox.SelectedRanges.Clear()\r\nMe.listBox.SelectedRanges.Add( range )\n'})})})]})]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"Selecting items using a filter expression (ShipVia !=3)"}),(0,t.jsxs)(s.A,{children:[(0,t.jsx)(a.A,{value:"csharp",label:"C#",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'FilterExpression expression = new FilterExpression( "ShipVia", FilterOperator.NotEqual, 3 );\r\n\r\nSelectionRange range = new SelectionRange( new SortDescription[] { new SortDescription( "OrderDate", ListSortDirection.Ascending ) }, expression, null );\r\n\r\nrange.StartRangeInfos.Add( "OrderDate", new DateTime( 2006, 01, 01 ) );\r\nrange.EndRangeInfos.Add( "OrderDate", new DateTime( 2006, 12, 31 ) );\r\n\r\nthis.listBox.SelectedRanges.Clear();\r\nthis.listBox.SelectedRanges.Add( range );\n'})})}),(0,t.jsx)(a.A,{value:"vbnet",label:"VB.NET",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-vbnet",children:'Dim expression As New FilterExpression( "ShipVia", FilterOperator.NotEqual, 3 )\r\n\r\nDim range As New SelectionRange( New SortDescription() { New SortDescription( "OrderDate", ListSortDirection.Ascending ) }, expression, Nothing )\r\n\r\nrange.StartRangeInfos.Add( "OrderDate", New DateTime( 2006, 01, 01 ) )\r\nrange.EndRangeInfos.Add( "OrderDate", New DateTime( 2006, 12, 31 ) )\r\n\r\nMe.listBox.SelectedRanges.Clear()\r\nMe.listBox.SelectedRanges.Add( range )\n'})})})]})]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"Selecting items using combined filter expressions (ShipVia = 3 OR OrderDate >= 2008/01/01)"}),(0,t.jsxs)(s.A,{children:[(0,t.jsx)(a.A,{value:"csharp",label:"C#",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'FilterExpression leftExpression = new FilterExpression( "ShipVia", FilterOperator.Equal, 3 );\r\nFilterExpression rightExpression = new FilterExpression( "OrderDate", FilterOperator.GreaterThanOrEqual, new DateTime( 2008, 01, 01 ) );\r\n\r\nOrFilterExpression expression = new OrFilterExpression( leftExpression, rightExpression );\r\n\r\nSelectionRange range = new SelectionRange( expression, null );\r\n\r\nthis.listBox.SelectedRanges.Clear();\r\nthis.listBox.SelectedRanges.Add( range );\n'})})}),(0,t.jsx)(a.A,{value:"vbnet",label:"VB.NET",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-vbnet",children:'Dim leftExpression As New FilterExpression( "ShipVia", FilterOperator.Equal, 3 )\r\nDim rightExpression As New FilterExpression( "OrderDate", FilterOperator.GreaterThanOrEqual, New DateTime( 2008, 01, 01 ) )\r\n\r\nDim expression As New OrFilterExpression( leftExpression, rightExpression )\r\n\r\nDim range As New SelectionRange( expression, Nothing )\r\n\r\nMe.listBox.SelectedRanges.Clear()\r\nMe.listBox.SelectedRanges.Add( range )\n'})})})]})]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"Selecting items using multiple selection-range infos (ShipVia = 2 AND OrderDate = 2006)"}),(0,t.jsxs)(s.A,{children:[(0,t.jsx)(a.A,{value:"csharp",label:"C#",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'SelectionRange range = new SelectionRange( new SortDescription[] { new SortDescription( "ShipVia", ListSortDirection.Ascending ),\r\n                                                                        new SortDescription( "OrderDate", ListSortDirection.Ascending )}, null, null );\r\n\r\nrange.StartRangeInfos.Add( "ShipVia", 2 );\r\nrange.StartRangeInfos.Add( "OrderDate", new DateTime( 2006, 01, 01 ) );\r\n\r\nrange.EndRangeInfos.Add( "ShipVia", 2 );\r\nrange.EndRangeInfos.Add( "OrderDate", new DateTime( 2006, 12, 31 ) );\r\n\r\nthis.listBox.SelectedRanges.Clear();\r\nthis.listBox.SelectedRanges.Add( range );\n'})})}),(0,t.jsx)(a.A,{value:"vbnet",label:"VB.NET",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-vbnet",children:'Dim range As New SelectionRange( New SortDescription() { New SortDescription( "ShipVia", ListSortDirection.Ascending ),\r\n                                                        New SortDescription( "OrderDate", ListSortDirection.Ascending )}, Nothing, Nothing )\r\n\r\nrange.StartRangeInfos.Add( "ShipVia", 2 )\r\nrange.StartRangeInfos.Add( "OrderDate", New DateTime( 2006, 01, 01 ) )\r\n\r\nrange.EndRangeInfos.Add( "ShipVia", 2 )\r\nrange.EndRangeInfos.Add( "OrderDate", New DateTime( 2006, 12, 31 ) )\r\n\r\nMe.listBox.SelectedRanges.Clear()\r\nMe.listBox.SelectedRanges.Add( range )\n'})})})]})]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"Selecting items using a predicate delegate (ShippedDate > RequiredDate)"}),(0,t.jsxs)(s.A,{children:[(0,t.jsx)(a.A,{value:"csharp",label:"C#",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"SelectionRange range = new SelectionRange( null, new Predicate<object>( IsPastRequiredDate ) );\r\n\r\nthis.listBox.SelectedRanges.Clear();\r\nthis.listBox.SelectedRanges.Add( range );\r\n\r\nprivate bool IsPastRequiredDate( object value )\r\n{\r\n  Order order = value as Order;\r\n\r\n  if( order == null )\r\n      return false;\r\n\r\n  return ( order.ShippedDate > order.RequiredDate );\r\n}\n"})})}),(0,t.jsx)(a.A,{value:"vbnet",label:"VB.NET",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-vbnet",children:"Dim range As New SelectionRange( Nothing, New Predicate(Of Object)( IsPastRequiredDate ) )\r\n\r\nMe.listBox.SelectedRanges.Clear()\r\nMe.listBox.SelectedRanges.Add( range )\r\nPrivate Function IsPastRequiredDate( ByVal value As Object ) As Boolean\r\n  Dim order As Order = CType( value, Order )\r\n\r\n  If order Is Nothing Then\r\n      return False\r\n  End If\r\n\r\n  Return ( order.ShippedDate > order.RequiredDate )\r\nEnd Function\n"})})})]})]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:'Selecting items using multiple selection ranges (ShipCountry = "A-D" AND ShipCountry = "M-S")'}),(0,t.jsxs)(s.A,{children:[(0,t.jsx)(a.A,{value:"csharp",label:"C#",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'SelectionRange firstRange = new SelectionRange( new SortDescription[] { new SortDescription( "ShipCountry", ListSortDirection.Ascending ) }, null, null );\r\nSelectionRange secondRange = new SelectionRange( new SortDescription[] { new SortDescription( "ShipCountry", ListSortDirection.Ascending ) }, null, null );\r\n\r\nfirstRange.StartRangeInfos.Add( "ShipCountry", "A" );\r\nfirstRange.EndRangeInfos.Add( "ShipCountry", "D" );\r\n\r\nsecondRange.StartRangeInfos.Add( "ShipCountry", "M" );\r\nsecondRange.EndRangeInfos.Add( "ShipCountry", "S" );\r\n\r\nthis.listBox.SelectedRanges.Clear();\r\nthis.listBox.SelectedRanges.Add( firstRange );\r\nthis.listBox.SelectedRanges.Add( secondRange );\n'})})}),(0,t.jsx)(a.A,{value:"vbnet",label:"VB.NET",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-vbnet",children:'Dim firstRange As New SelectionRange( New SortDescription() { New SortDescription( "ShipCountry", ListSortDirection.Ascending ) }, Nothing, Nothing )\r\nDim secondRange As New SelectionRange( New SortDescription() { New SortDescription( "ShipCountry", ListSortDirection.Ascending ) }, Nothing, Nothing )\r\n\r\nfirstRange.StartRangeInfos.Add( "ShipCountry", "A" )\r\nfirstRange.EndRangeInfos.Add( "ShipCountry", "D" )\r\n\r\nsecondRange.StartRangeInfos.Add( "ShipCountry", "M" )\r\nsecondRange.EndRangeInfos.Add( "ShipCountry", "S" )\r\n\r\nMe.listBox.SelectedRanges.Clear()\r\nMe.listBox.SelectedRanges.Add( firstRange )\r\nMe.listBox.SelectedRanges.Add( secondRange )\n'})})})]})]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"Selecting items from start to specified end point"}),(0,t.jsxs)(s.A,{children:[(0,t.jsx)(a.A,{value:"csharp",label:"C#",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'SelectionRange range = new SelectionRange( new SortDescription[] { new SortDescription( "ShipCountry", ListSortDirection.Ascending ) }, null, null );\r\n\r\n// Select all items from the start to "C". All items that start with "A" or "B" will be selected.\r\n// Using "B" only would not work since, for example, "Belgium"  "B".\r\nrange.StartRangeInfos.FromStart();\r\nrange.EndRangeInfos.Add( "ShipCountry", "C" );\r\nrange.EndRangeInfos.IsInclusive = false;\r\n\r\nthis.listBox.SelectedRanges.Clear();\r\nthis.listBox.SelectedRanges.Add( range );\n'})})}),(0,t.jsx)(a.A,{value:"vbnet",label:"VB.NET",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-vbnet",children:'Dim range As New SelectionRange( New SortDescription() { New SortDescription( "ShipCountry", ListSortDirection.Ascending ) }, Nothing, Nothing )\r\n\r\n\' Select all items from the start to "C". All items that start with "A" or "B" will be selected.\r\n\' Using "B" only would not work since, for example, "Belgium"  "B".\r\nrange.StartRangeInfos.FromStart()\r\nrange.EndRangeInfos.Add( "ShipCountry", "C" )\r\nrange.EndRangeInfos.IsInclusive = False\r\n\r\nMe.listBox.SelectedRanges.Clear()\r\nMe.listBox.SelectedRanges.Add( range )\n'})})})]})]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"Selecting items from specified start point to end"}),(0,t.jsxs)(s.A,{children:[(0,t.jsx)(a.A,{value:"csharp",label:"C#",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'SelectionRange range = new SelectionRange( new SortDescription[] { new SortDescription( "ShipCountry", ListSortDirection.Ascending ) }, null, null );\r\n\r\nrange.StartRangeInfos.Add( "ShipCountry", "B" );\r\nrange.EndRangeInfos.ToEnd();\r\n\r\nthis.listBox.SelectedRanges.Clear();\r\nthis.listBox.SelectedRanges.Add( range );\n'})})}),(0,t.jsx)(a.A,{value:"vbnet",label:"VB.NET",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-vbnet",children:'Dim range As New SelectionRange( New SortDescription() { New SortDescription( "ShipCountry", ListSortDirection.Ascending ) }, Nothing, Nothing )\r\n\r\nrange.StartRangeInfos.Add( "ShipCountry", "B" )\r\nrange.EndRangeInfos.ToEnd()\r\n\r\nMe.listBox.SelectedRanges.Clear()\r\nMe.listBox.SelectedRanges.Add( range )\n'})})})]})]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"Unselecting items from a selection range"}),(0,t.jsxs)(s.A,{children:[(0,t.jsx)(a.A,{value:"csharp",label:"C#",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'SelectionRange range = new SelectionRange( new SortDescription[] { new SortDescription( "ShipCountry", ListSortDirection.Ascending ) }, null, null );\r\n\r\nrange.SelectionType = SelectionType.Unselection;\r\nrange.StartRangeInfos.Add( "ShipCountry", "Canada" );\r\nrange.EndRangeInfos.Add( "ShipCountry", "Canada" );\r\n\r\nlistBox.SelectedRanges.Add( range );\n'})})}),(0,t.jsx)(a.A,{value:"vbnet",label:"VB.NET",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-vbnet",children:'Dim range As New SelectionRange( New SortDescription() { New SortDescription( "ShipCountry", ListSortDirection.Ascending ) }, Nothing, Nothing )\r\n\r\nrange.SelectionType = SelectionType.Unselection\r\nrange.StartRangeInfos.Add( "ShipCountry", "Canada" )\r\nrange.EndRangeInfos.Add( "ShipCountry", "Canada" )\r\n\r\nlistBox.SelectedRanges.Add( range )\n'})})})]})]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"Selecting from and to a specific item (LOCAL LIST ONLY)"}),(0,t.jsxs)(s.A,{children:[(0,t.jsx)(a.A,{value:"csharp",label:"C#",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"SelectionRange range = new SelectionRange();\r\n\r\nrange.StartRangeInfos.FromItem( this.People[ 5 ] );\r\nrange.EndRangeInfos.ToItem( this.People[ 10 ] );\r\n\r\nlistBox.SelectedRanges.Add( range );\n"})})}),(0,t.jsx)(a.A,{value:"vbnet",label:"VB.NET",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-vbnet",children:"Dim range As New SelectionRange()\r\n\r\nrange.StartRangeInfos.FromItem( Me.People[ 5 ] )\r\nrange.EndRangeInfos.ToItem( Me.People[ 10 ] )\r\n\r\nlistBox.SelectedRanges.Add( range )\n"})})})]})]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"Selecting a single item from a remote data source (WCF DataServiceQuery)"}),(0,t.jsxs)(s.A,{children:[(0,t.jsx)(a.A,{value:"csharp",label:"C#",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"  public void GetOrder( int orderID )\r\n  {\r\n    DataServiceQuery<Order> query = Data.Orders.Where( order => order.OrderID == orderID ) as DataServiceQuery<Order>;\r\n  \r\n    if( query != null )\r\n        IAsyncResult result = query.BeginExecute( new AsyncCallback( this.ProcessItem ), query ); \r\n  }\r\n  \r\n  private void ProcessItem( IAsyncResult result )\r\n  {\r\n    DataServiceQuery<Order> query = result.AsyncState as DataServiceQuery<Order>;\r\n  \r\n    if( query != null )\r\n    {\r\n        IEnumerable<Order> q = query.EndExecute( result );\r\n        Order order = q.FirstOrDefault();\r\n  \r\n        SelectionRange range = new SelectionRange( order );\r\n  \r\n        listBox.SelectedRanges.Clear();\r\n        listBox.SelectedRanges.Add( range );\r\n    }\r\n  }\r\n  \r\n  private void Button_Click( object sender, RoutedEventArgs e )\r\n  {\r\n    string orderIDString = orderIDTextBox.Text.Trim();\r\n  \r\n    if( !string.IsNullOrWhiteSpace( orderIDString ) )\r\n        this.GetOrder( System.Convert.ToInt32( orderIDString ) );\r\n  }\n"})})}),(0,t.jsx)(a.A,{value:"vbnet",label:"VB.NET",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-vbnet",children:"Public Sub GetOrder( ByVal orderID As Integer )\r\n  Dim query As DataServiceQuery( Of Order )= TryCast( Data.Orders.Where( order => order.OrderID = orderID ), DataServiceQuery( Of Order ) )\r\n  If Not query Is Nothing Then\r\n      Dim result As IAsyncCallback= query.BeginExecute( New AsyncCallback( AddressOf Me.ProcessItem ), query )\r\n  End If\r\nEnd Sub\r\n\r\nPrivate Sub ProcessItem( Dim result As IAsyncResult )\r\n  Dim query As DataServiceQuery( Of Order )= TryCast( result.AsyncState, DataServiceQuery( Of Order )\r\n\r\n  If Not query Is Nothing Then\r\n      Dim q As IEnumerable( Of Order ) = query.EndExecute( result )\r\n      Dim order As Order = q.FirstOrDefault()\r\n\r\n      Dim range = New SelectionRange( order )\r\n\r\n      listBox.SelectedRanges.Clear()\r\n      listBox.SelectedRanges.Add( range )\r\n  End If\r\nEnd Sub\r\nPrivate Sub Button_Click( ByVal sender As Object, ByVal e As RoutedEventArgs )\r\n  Dim orderIDString As String = orderIDTextBox.Text.Trim()\r\n  If Not string.IsNullOrWhiteSpace( orderIDString ) Then\r\n      Me.GetOrder( System.Convert.ToInt32( orderIDString ) )\r\n  End If\r\nEnd Sub\n"})})})]})]}),"\n",(0,t.jsx)(n.h2,{id:"selection-changed-notifications",children:"Selection-Changed Notifications"}),"\n",(0,t.jsxs)(n.p,{children:["Selection-changed notifications are provided via the ",(0,t.jsx)(n.code,{children:"SelectionChanged"})," event, which is raised whenever the selection in a listbox changes, whether by end-user interaction or through programmatic modifications of the selected ranges."]})]})}function g(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},9365:(e,n,r)=>{r.d(n,{A:()=>a});r(6540);var t=r(4164);const i={tabItem:"tabItem_Ymn6"};var s=r(4848);function a(e){let{children:n,hidden:r,className:a}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.A)(i.tabItem,a),hidden:r,children:n})}},1470:(e,n,r)=>{r.d(n,{A:()=>y});var t=r(6540),i=r(4164),s=r(3104),a=r(6347),l=r(205),o=r(7485),d=r(1682),c=r(679);function h(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:r}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:r,attributes:t,default:i}}=e;return{value:n,label:r,attributes:t,default:i}}))}(r);return function(e){const n=(0,d.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function g(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:r}=e;const i=(0,a.W6)(),s=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,o.aZ)(s),(0,t.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(i.location.search);n.set(s,e),i.replace({...i.location,search:n.toString()})}),[s,i])]}function m(e){const{defaultValue:n,queryString:r=!1,groupId:i}=e,s=u(e),[a,o]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=r.find((e=>e.default))??r[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s}))),[d,h]=p({queryString:r,groupId:i}),[m,S]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,s]=(0,c.Dv)(r);return[i,(0,t.useCallback)((e=>{r&&s.set(e)}),[r,s])]}({groupId:i}),x=(()=>{const e=d??m;return g({value:e,tabValues:s})?e:null})();(0,l.A)((()=>{x&&o(x)}),[x]);return{selectedValue:a,selectValue:(0,t.useCallback)((e=>{if(!g({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),h(e),S(e)}),[h,S,s]),tabValues:s}}var S=r(2303);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=r(4848);function b(e){let{className:n,block:r,selectedValue:t,selectValue:a,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.a_)(),c=e=>{const n=e.currentTarget,r=o.indexOf(n),i=l[r].value;i!==t&&(d(n),a(i))},h=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const r=o.indexOf(e.currentTarget)+1;n=o[r]??o[0];break}case"ArrowLeft":{const r=o.indexOf(e.currentTarget)-1;n=o[r]??o[o.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":r},n),children:l.map((e=>{let{value:n,label:r,attributes:s}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>o.push(e),onKeyDown:h,onClick:c,...s,className:(0,i.A)("tabs__item",x.tabItem,s?.className,{"tabs__item--active":t===n}),children:r??n},n)}))})}function A(e){let{lazy:n,children:r,selectedValue:s}=e;const a=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===s));return e?(0,t.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function j(e){const n=m(e);return(0,f.jsxs)("div",{className:(0,i.A)("tabs-container",x.tabList),children:[(0,f.jsx)(b,{...n,...e}),(0,f.jsx)(A,{...n,...e})]})}function y(e){const n=(0,S.A)();return(0,f.jsx)(j,{...e,children:h(e.children)},String(n))}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>l});var t=r(6540);const i={},s=t.createContext(i);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);