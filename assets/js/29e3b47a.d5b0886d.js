"use strict";(self.webpackChunkxceed_doc_ui=self.webpackChunkxceed_doc_ui||[]).push([[1426],{4911:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>a});var t=i(4848),n=i(8453);const o={},s="Preventing ScrollBars from being Displayed",c={id:"code-snippets/19",title:"Preventing ScrollBars from being Displayed",description:"The following example demonstrates how to prevent scroll bars from being displayed by providing an implicit style for the TableViewScrollViewer that sets the HorizontalScollBarVisibility and VerticalScrollBarVisibility properties to Hidden.",source:"@site/datagrid/code-snippets/19.md",sourceDirName:"code-snippets",slug:"/code-snippets/19",permalink:"/xceed-doc-ui/datagrid/code-snippets/19",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebardatagrid",previous:{title:"Indenting a Non-row Item in a Detail Configuration Header",permalink:"/xceed-doc-ui/datagrid/code-snippets/18"},next:{title:"Printing and Exporting",permalink:"/xceed-doc-ui/datagrid/code-snippets/20"}},d={},a=[];function l(e){const r={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"preventing-scrollbars-from-being-displayed",children:"Preventing ScrollBars from being Displayed"})}),"\n",(0,t.jsxs)(r.p,{children:["The following example demonstrates how to prevent scroll bars from being displayed by providing an implicit style for the ",(0,t.jsx)(r.code,{children:"TableViewScrollViewer"})," that sets the ",(0,t.jsx)(r.code,{children:"HorizontalScollBarVisibility"})," and ",(0,t.jsx)(r.code,{children:"VerticalScrollBarVisibility"})," properties to Hidden."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-xml",children:'<Grid xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid">\r\n  <Grid.Resources>\r\n    <xcdg:DataGridCollectionViewSource x:Key="cvs_persons"\r\n                                    Source="{Binding Source={x:Static Application.Current}, \r\n                                                     Path=Persons}"/>\r\n    <Style TargetType="{x:Type xcdg:TableViewScrollViewer}">\r\n      <Setter Property="HorizontalScrollBarVisibility"\r\n              Value="Hidden"/>\r\n      <Setter Property="VerticalScrollBarVisibility"\r\n              Value="Hidden"/>\r\n    </Style>\r\n  </Grid.Resources>\r\n  <xcdg:DataGridControl x:Name="PersonGrid"\r\n                        ItemsSource="{Binding Source={StaticResource cvs_persons}}"/>\r\n</Grid>\n'})})]})}function p(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,r,i)=>{i.d(r,{R:()=>s,x:()=>c});var t=i(6540);const n={},o=t.createContext(n);function s(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);