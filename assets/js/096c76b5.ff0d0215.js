"use strict";(self.webpackChunkxceed_doc_ui=self.webpackChunkxceed_doc_ui||[]).push([[9331],{8045:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var t=r(4848),a=r(8453);const i={},o="Migrating from Version 3.1",l={id:"migrating-from-prev/03",title:"Migrating from Version 3.1",description:"Although every attempt was made to prevent breaking interface changes between versions 3.1 and 3.2, some were inevitable. This topic describes the most notable breaking changes.",source:"@site/datagrid/migrating-from-prev/03.md",sourceDirName:"migrating-from-prev",slug:"/migrating-from-prev/03",permalink:"/xceed-doc-ui/datagrid/migrating-from-prev/03",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebardatagrid",previous:{title:"Migrating from Version 3.5",permalink:"/xceed-doc-ui/datagrid/migrating-from-prev/02"},next:{title:"Migrating from Version 3.0",permalink:"/xceed-doc-ui/datagrid/migrating-from-prev/04"}},s={},d=[{value:"Breaking Changes",id:"breaking-changes",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"migrating-from-version-31",children:"Migrating from Version 3.1"})}),"\n",(0,t.jsx)(n.p,{children:"Although every attempt was made to prevent breaking interface changes between versions 3.1 and 3.2, some were inevitable. This topic describes the most notable breaking changes."}),"\n",(0,t.jsx)(n.h2,{id:"breaking-changes",children:"Breaking Changes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["ActivationGesturesCollection is now a ",(0,t.jsx)(n.code,{children:"FreezableCollection<ActivationGestures>"})," rather than an ",(0,t.jsx)(n.code,{children:"ObservableCollection<ActivationGestures>"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"The CellEditor.TextBoxEditor, CheckBoxEditor, and DatePickerEditor properties are now Frozen meaning that they are read only. The EditTemplate can therefore not be replaced nor modified."}),"\n",(0,t.jsxs)(n.li,{children:["ColumnCollection  is now an ",(0,t.jsx)(n.code,{children:"ObservableCollection<ColumnBase>"})," rather than ",(0,t.jsx)(n.code,{children:"ObservableCollection<Column>"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"ColumnManagerCell, InsertionCell, StatCell, and DataCell.ParentColumn now return a ColumnBase rather than a Column."}),"\n",(0,t.jsx)(n.li,{children:"CommitItemsEventArgs.CollectionView now returns a DataGridVirtualizingCollectionViewBase rather than a DataGridVirtualizingCollectionView."}),"\n",(0,t.jsxs)(n.li,{children:["DataGridCollectionViewSourceBase and DataGridVirtualizingCollectionViewSource.ItemProperties now return an ",(0,t.jsx)(n.code,{children:"ObservableCollection<DataGridItemPropertyBase>"})," rather than ",(0,t.jsx)(n.code,{children:"ObservableCollection<DataGridItemProperty>"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["DataGridContext.ColumnChooserColumns now returns a ",(0,t.jsx)(n.code,{children:"ReadOnlyObservableCollection<ColumnBase>"})," rather than ",(0,t.jsx)(n.code,{children:"ReadOnlyObservableCollection<Column>"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"DataGridContext and DataGridControl.CurrentColumn now return a ColumnBase rather than a Column."}),"\n",(0,t.jsxs)(n.li,{children:["DataGridContext, DetailConfiguration, and DataGridControl.VisibleColumns now return a ",(0,t.jsx)(n.code,{children:"ReadOnlyObservableCollection<ColumnBase>"})," rather than ",(0,t.jsx)(n.code,{children:"ReadOnlyObservableCollection<Column>"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"DataGridControl.GlobalCurrentColumn now returns a ColumnBase rather than a Column."}),"\n",(0,t.jsxs)(n.li,{children:["DataGridItemPropertyCollection is now an ",(0,t.jsx)(n.code,{children:"ObservableCollection<DataGridItemPropertyBase>"})," rather than ",(0,t.jsx)(n.code,{children:"ObservableCollection<DataGridItemProperty>"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"DataGridVirtualizingCollectionView.PageSize is not an int rather than a double."}),"\n",(0,t.jsx)(n.li,{children:"QueryAutoFilterDistinctValuesEventArgs.ItemProperty now returns a DataGridItemPropertyBase rather than a DataGridItemProperty."}),"\n",(0,t.jsx)(n.li,{children:"Row.CreateCell now requires a ColumnBase rather than a Column."}),"\n",(0,t.jsxs)(n.li,{children:["CsvExporter, ExcelExporter, and ExporterBase.EndHeader and StartHeader now require a ",(0,t.jsx)(n.code,{children:"List<ColumnBase>"})," rather than a ",(0,t.jsx)(n.code,{children:"List<Column>"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"When queried, the items in the ItemsSource collection now return a DataRowView rather than a DataRow. (This assumes the datagrid is bound to a DataTable/DataView.)"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var t=r(6540);const a={},i=t.createContext(a);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);