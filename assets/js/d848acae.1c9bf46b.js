"use strict";(self.webpackChunkxceed_doc_ui=self.webpackChunkxceed_doc_ui||[]).push([[8793],{2340:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var o=n(4848),t=n(8453);const i={},a="Drag-and-Drop Operations",s={id:"listbox/09",title:"Drag-and-Drop Operations",description:"The ListBox class and the classes contained in the Xceed.Wpf.DragDrop namespace provide support for flexible drag-and-drop operations, through events that determine whether a drop operation can occur (IDropTargetCanDropElement) with an IDropTarget-derived control, as well as events related to entering (IDropTargetDragEnter), leaving (IDropTargetDragLeave), dragging over (IDropTargetDragOver), and dropping on (IDropTargetDrop) an IDropTarget-derived control.",source:"@site/docs/listbox/09.md",sourceDirName:"listbox",slug:"/listbox/09",permalink:"/xceed-doc-ui/docs/listbox/09",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Animation Settings",permalink:"/xceed-doc-ui/docs/listbox/08"},next:{title:"Panels & Views",permalink:"/xceed-doc-ui/docs/category/panels--views"}},d={},c=[];function l(e){const r={admonition:"admonition",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"drag-and-drop-operations",children:"Drag-and-Drop Operations"})}),"\n",(0,o.jsxs)(r.p,{children:["The ",(0,o.jsx)(r.code,{children:"ListBox"})," class and the classes contained in the ",(0,o.jsx)(r.code,{children:"Xceed.Wpf.DragDrop"})," namespace provide support for flexible drag-and-drop operations, through events that determine whether a drop operation can occur (",(0,o.jsx)(r.code,{children:"IDropTargetCanDropElement"}),") with an ",(0,o.jsx)(r.code,{children:"IDropTarget"}),"-derived control, as well as events related to entering (",(0,o.jsx)(r.code,{children:"IDropTargetDragEnter"}),"), leaving (",(0,o.jsx)(r.code,{children:"IDropTargetDragLeave"}),"), dragging over (",(0,o.jsx)(r.code,{children:"IDropTargetDragOver"}),"), and dropping on (IDropTargetDrop) an ",(0,o.jsx)(r.code,{children:"IDropTarget"}),"-derived control."]}),"\n",(0,o.jsx)(r.p,{children:"To enable drag operations from the listbox, the AllowDrag property must be set to true."}),"\n",(0,o.jsx)(r.admonition,{type:"tip",children:(0,o.jsxs)(r.p,{children:["You must implement the ",(0,o.jsx)(r.strong,{children:"IDropTarget"})," interface on a control you wish to be able to accept the dragged elements."]})}),"\n",(0,o.jsxs)(r.p,{children:["The appearance and behavior of items dragged from the listbox can be configured by setting the ",(0,o.jsx)(r.code,{children:"DraggedElementConfiguration"})," property of the ",(0,o.jsx)(r.code,{children:"ContainerConfigurations"})," instance accessible via the listbox's ",(0,o.jsx)(r.code,{children:"ContainerConfigurations"})," property."]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-xml",children:'<xclb:ListBox x:Name="productsListBox"\r\n              AllowDrag="True"\r\n              Margin="5"\r\n              Grid.Column="0"\r\n              Grid.Row="1"\r\n              ItemsSource="{Binding Products}"\r\n              ToolPaneVisibility="Collapsed"\r\n              ItemTemplate="{StaticResource productListBoxItemTemplate}"\r\n              SelectionMode="Extended"\r\n              DragStarting="ProductsListBox_DragStarting">\r\n\r\n...\r\n\r\n    <xclb:ContainerConfigurations>\r\n      <xclb:ContainerConfigurations.DraggedElementConfiguration>\r\n         <xclb:DraggedElementConfiguration PositionAdornerRelativeToElement="False"\r\n                                        DisplaySiblingElements="False"\r\n                                        ElementTemplate="{StaticResource productDraggedElementTemplate}"\r\n                                        CanDropCursor="Custom"\r\n                                        CanDropCursorTemplate="{StaticResource addToCartCursorTemplate}"\r\n                                        NoDropCursor="Custom"\r\n                                        NoDropCursorTemplate="{StaticResource noDropCursorTemplate}" />\r\n      </xclb:ContainerConfigurations.DraggedElementConfiguration>\r\n    </xclb:ContainerConfigurations>\r\n  </xclb:ListBox.ContainerConfigurations>\r\n</xclb:ListBox>\n'})}),"\n",(0,o.jsxs)(r.p,{children:["Pre-defined cursors for ",(0,o.jsx)(r.code,{children:"CanDropCursor"})," and NoDropCursor are available in the ",(0,o.jsx)(r.code,{children:"DragDropCursor"})," enumeration. ",(0,o.jsx)(r.code,{children:"CanDropCursor"})," is shown when a drop operation can be performed. When this property is set to ",(0,o.jsx)(r.code,{children:"DragDropCursor.Custom"}),", the data template in ",(0,o.jsx)(r.code,{children:"CanDropCursorTemplate"})," is used instead. The NoDropCursor is shown when a drop operation cannot be performed. When this property is set to ",(0,o.jsx)(r.code,{children:"DragDropCursor.Custom"}),", the data template in ",(0,o.jsx)(r.code,{children:"NoDropCursorTemplate"})," is used instead."]}),"\n",(0,o.jsxs)(r.p,{children:["The DisplaySiblingElements property determines whether dragged sibling elements will be displayed during the operation, while the ",(0,o.jsx)(r.strong,{children:"SiblingElementTemplate"})," provides the data template for those elements."]}),"\n",(0,o.jsx)(r.p,{children:"The PositionAdornerRelativeToElement property determines whether the dragged element is positioned underneath the adorner (the cursor)."}),"\n",(0,o.jsxs)(r.p,{children:["Finally, how quickly dragged/dropped elements fade in and out is determined by the ",(0,o.jsx)(r.code,{children:"ElementFadeInDuration"})," and the ",(0,o.jsx)(r.code,{children:"ElementFadeOutDuration"})," properties, respectively."]}),"\n",(0,o.jsx)(r.admonition,{type:"tip",children:(0,o.jsxs)(r.p,{children:["The ",(0,o.jsx)(r.code,{children:"ListBoxContainer"}),"-derived classes (",(0,o.jsx)(r.code,{children:"ListBoxItem"})," and ",(0,o.jsx)(r.code,{children:"ListBoxGroupHeader"}),") implement the ",(0,o.jsx)(r.code,{children:"IProvideDraggedContentPresenter"})," interface. By implementing this interface in your own controls, you can create controls that present content as these listbox elements do during drag operations."]})})]})}function p(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>s});var o=n(6540);const t={},i=o.createContext(t);function a(e){const r=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),o.createElement(i.Provider,{value:r},e.children)}}}]);