"use strict";(self.webpackChunkxceed_doc_ui=self.webpackChunkxceed_doc_ui||[]).push([[4914],{6851:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>d,toc:()=>u});var n=t(4848),i=t(8453),a=t(1470),l=t(9365);const o={},s="Filtering Data Items",d={id:"code-snippets/15",title:"Filtering Data Items",description:"The following page provides a list of examples that demonstrate how to filter data items.",source:"@site/datagrid/code-snippets/15.md",sourceDirName:"code-snippets",slug:"/code-snippets/15",permalink:"/xceed-doc-ui/datagrid/code-snippets/15",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebardatagrid",previous:{title:"Editing Data",permalink:"/xceed-doc-ui/datagrid/code-snippets/14"},next:{title:"Grouping Data Items",permalink:"/xceed-doc-ui/datagrid/code-snippets/16"}},c={},u=[{value:"Filtering data items (Filter Event)",id:"filtering-data-items-filter-event",level:3},{value:"Enabling automatic filtering",id:"enabling-automatic-filtering",level:3},{value:"Providing a new auto-filter control style",id:"providing-a-new-auto-filter-control-style",level:3},{value:"Creating external auto-filter controls",id:"creating-external-auto-filter-controls",level:3},{value:"Providing custom distinct values",id:"providing-custom-distinct-values",level:3},{value:"Using a filter row",id:"using-a-filter-row",level:3},{value:"Providing default filter criteria",id:"providing-default-filter-criteria",level:3},{value:"Enabling and disabling advanced filtering",id:"enabling-and-disabling-advanced-filtering",level:3},{value:"Localize the filter operators",id:"localize-the-filter-operators",level:3}];function p(e){const r={admonition:"admonition",code:"code",em:"em",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"filtering-data-items",children:"Filtering Data Items"})}),"\n",(0,n.jsx)(r.p,{children:"The following page provides a list of examples that demonstrate how to filter data items."}),"\n",(0,n.jsx)(r.admonition,{type:"tip",children:(0,n.jsx)(r.p,{children:"All examples in this topic assume that the grid is bound to the Orders table of the Northwind database, unless stated otherwise."})}),"\n",(0,n.jsx)(r.h3,{id:"filtering-data-items-filter-event",children:"Filtering data items (Filter Event)"}),"\n",(0,n.jsxs)(r.p,{children:["The following example demonstrates how to filter the data items displayed in a grid using the ",(0,n.jsx)(r.strong,{children:"Filter"})," event. Only the data items whose ",(0,n.jsx)(r.em,{children:"ShipVia"}),' property value is "3" will be displayed in the grid.']}),"\n",(0,n.jsxs)(a.A,{children:[(0,n.jsx)(l.A,{value:"xaml",label:"XAML",default:!0,children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-xml",children:'  <Grid xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid">\r\n    <Grid.Resources>\r\n      <xcdg:DataGridCollectionViewSource x:Key="cvs_orders"\r\n                                        Source="{Binding Source={x:Static Application.Current},\r\n                                                          Path=Orders}"\r\n                                        Filter="ShipViaFilter"/>\r\n    </Grid.Resources>\r\n    <xcdg:DataGridControl x:Name="OrdersGrid"\r\n                          ItemsSource="{Binding Source={StaticResource cvs_orders}}"/>\r\n  </Grid>\n'})})}),(0,n.jsx)(l.A,{value:"csharp",label:"C#",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-csharp",children:'private void ShipViaFilter( object sender, FilterEventArgs e )\r\n{\r\n  object value = ( ( System.Data.DataRow )e.Item )[ "ShipVia" ]; \r\n  if( ( value != null ) && ( value != DBNull.Value ) )\r\n  {\r\n    if( ( int )value == 3 )\r\n    {\r\n    e.Accepted = true;\r\n    }\r\n    else\r\n    {\r\n    e.Accepted = false;\r\n    }\r\n  }     \r\n}\n'})})}),(0,n.jsx)(l.A,{value:"vbnet",label:"VB.NET",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-vbnet",children:'Private Sub ShipViaFilter( sender As Object, e As FilterEventArgs )\r\n  Dim value As Object = CType( e.Item, System.Data.DataRow )( "ShipVia" )\r\n  If (value IsNot Nothing) AndAlso (value <> DBNull.Value) Then\r\n    If CInt( value ) = 3 Then\r\n      e.Accepted = True\r\n    Else\r\n      e.Accepted = False\r\n    End If\r\n  End If\r\nEnd Sub\n'})})})]}),"\n",(0,n.jsx)(r.p,{children:"The next example demonstrates how to filter data items using the Filter predicate delegate."}),"\n",(0,n.jsxs)(a.A,{children:[(0,n.jsx)(l.A,{value:"csharp",label:"C#",default:!0,children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-csharp",children:'  DataGridCollectionView view = new DataGridCollectionView( Orders );\r\n  view.Filter = new Predicate<object>( ShipViaFilter );\r\n  dataGridControl.ItemsSource = view;\r\n\r\n  private bool ShipViaFilter( object item )\r\n  {\r\n    object value = ( ( System.Data.DataRow )item )[ "ShipVia" ];\r\n    if( ( value != null ) && ( value != DBNull.Value ) )\r\n    {\r\n      if( ( int )value == 3 )       \r\n        return true;       \r\n    }\r\n    return false;\r\n  }\n'})})}),(0,n.jsx)(l.A,{value:"vbnet",label:"VB.NET",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-vbnet",children:'  Dim view As New DataGridCollectionView( Orders )\r\n  view.Filter = New Predicate(Of Object)( ShipViaFilter )\r\n  dataGridControl.ItemsSource = view\r\n  Private Function ShipViaFilter( item As Object ) As Boolean\r\n    Dim value As Object = TryCast( item, System.Data.DataRow )( "ShipVia" )\r\n    If (value IsNot Nothing) AndAlso (value <> DBNull.Value) Then\r\n      If CInt( value ) = 3 Then\r\n        Return True\r\n      End If\r\n    End If\r\n    Return false\r\n  End Function\n'})})})]}),"\n",(0,n.jsx)(r.h3,{id:"enabling-automatic-filtering",children:"Enabling automatic filtering"}),"\n",(0,n.jsx)(r.p,{children:"The following example demonstrates how to enable automatic filtering, disabling it for the columns that will not support it and filtering the distinct values of the ShipCity column."}),"\n",(0,n.jsxs)(a.A,{children:[(0,n.jsx)(l.A,{value:"xaml",label:"XAML",default:!0,children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-xml",children:'  <Grid>\r\n    <Grid.Resources>\r\n      <xcdg:DataGridCollectionViewSource x:Key="cvs_orders"\r\n                                        Source="{Binding Source={x:Static Application.Current},\r\n                                                          Path=Orders}"\r\n                                        AutoFilterMode="And"\r\n                                        DistinctValuesConstraint="Filtered"\r\n                                        AutoCreateItemProperties="False">      \r\n          <xcdg:DataGridCollectionViewSource.ItemProperties>\r\n            <xcdg:DataGridItemProperty Name="ShipCountry"\r\n                                              Title="Country"/>\r\n            <xcdg:DataGridItemProperty Name="ShipCity"\r\n                                      Title="City"/>\r\n            <xcdg:DataGridItemProperty Name="ShipAddress"\r\n                                      Title="Address"/>\r\n            <xcdg:DataGridItemProperty Name="ShipPostalCode"\r\n                                      Title="Postal Code"/>\r\n            <xcdg:DataGridItemProperty Name="ShipName"\r\n                                      Title="Name"\r\n                                      CalculateDistinctValues="False"/>\r\n            <xcdg:DataGridItemProperty Name="OrderDate"\r\n                                      Title="Order Date"\r\n                                      CalculateDistinctValues="False"/>               \r\n            <xcdg:DataGridItemProperty Name="Freight"\r\n                                      CalculateDistinctValues="False"/>\r\n          </xcdg:DataGridCollectionViewSource.ItemProperties>\r\n        </xcdg:DataGridCollectionViewSource>       \r\n    </Grid.Resources>\r\n    <xcdg:DataGridControl x:Name="OrdersGrid"\r\n                          ItemsSource="{Binding Source={StaticResource cvs_orders}}"/>\r\n  </Grid>\n'})})}),(0,n.jsx)(l.A,{value:"csharp",label:"C#",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-csharp",children:'  DataGridCollectionView view = new DataGridCollectionView( Orders, typeof( System.Data.DataRow ), false, false );\r\n  view.AutoFilterMode = AutoFilterMode.And;\r\n  view.DistinctValuesConstraint = DistinctValuesConstraint.Filtered;\r\n  view.ItemProperties.Add( new DataGridItemProperty( "ShipCountry", typeof( string ) ) );\r\n  view.ItemProperties.Add( new DataGridItemProperty( "ShipCity", typeof( string ) ) );\r\n  view.ItemProperties.Add( new DataGridItemProperty( "ShipAddress", typeof( string ) ) );\r\n  view.ItemProperties.Add( new DataGridItemProperty( "ShipPostalCode", typeof( string ) ) );\r\n  DataGridItemProperty shipName = new DataGridItemProperty( "ShipName", typeof( string ) );\r\n  shipName.CalculateDistinctValues = false;\r\n  view.ItemProperties.Add( shipName );\r\n  DataGridItemProperty orderDate = new DataGridItemProperty( "OrderDate", typeof( DateTime ) );\r\n  orderDate.CalculateDistinctValues = false;\r\n  view.ItemProperties.Add( orderDate );\r\n  DataGridItemProperty freight = new DataGridItemProperty( "Freight", typeof( double ) );\r\n  freight.CalculateDistinctValues = false;\r\n  view.ItemProperties.Add( freight );\r\n  dataGridControl.ItemsSource = view;  \n'})})}),(0,n.jsx)(l.A,{value:"vbnet",label:"VB.NET",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-vbnet",children:'  Dim view As New DataGridCollectionView( Orders, GetType( System.Data.DataRow ), False, False )\r\n  view.AutoFilterMode = AutoFilterMode.And\r\n  view.DistinctValuesConstraint = DistinctValuesConstraint.Filtered\r\n  view.ItemProperties.Add( New DataGridItemProperty( "ShipCountry", GetType( String ) ) )\r\n  view.ItemProperties.Add( New DataGridItemProperty( "ShipCity", GetType( String ) ) )\r\n  view.ItemProperties.Add( New DataGridItemProperty( "ShipAddress", GetType( String ) ) )\r\n  view.ItemProperties.Add( New DataGridItemProperty( "ShipPostalCode", GetType( String ) ) )\r\n  Dim shipName As New DataGridItemProperty( "ShipName", GetType( String ) )\r\n  shipName.CalculateDistinctValues = False\r\n  view.ItemProperties.Add( shipName )\r\n  Dim orderDate As New DataGridItemProperty( "OrderDate", GetType( DateTime ) )\r\n  orderDate.CalculateDistinctValues = False\r\n  view.ItemProperties.Add( orderDate )\r\n  Dim freight As New DataGridItemProperty( "Freight", GetType( Double ) )\r\n  freight.CalculateDistinctValues = False\r\n  view.ItemProperties.Add( freight )\r\n  dataGridControl.ItemsSource = view\n'})})})]}),"\n",(0,n.jsx)(r.h3,{id:"providing-a-new-auto-filter-control-style",children:"Providing a new auto-filter control style"}),"\n",(0,n.jsx)(r.p,{children:"The following example demonstrates how to provide the ShipCountry column with a new style for its associated AutoFilterControl that will only allow single selection."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-xml",children:'<Grid>\r\n  <Grid.Resources>\r\n  <xcdg:DataGridCollectionViewSource x:Key="cvs_orders"\r\n                                      Source="{Binding Source={x:Static Application.Current},\r\n                                                       Path=Orders}"\r\n                                      AutoFilterMode="And"\r\n                                      DistinctValuesConstraint="Filtered"\r\n                                      AutoCreateItemProperties="False">      \r\n       <xcdg:DataGridCollectionViewSource.ItemProperties>\r\n         <xcdg:DataGridItemProperty Name="ShipCountry"\r\n                                          Title="Country"/>\r\n         <xcdg:DataGridItemProperty Name="ShipCity"\r\n                                    Title="City"/>\r\n        <xcdg:DataGridItemProperty Name="ShipAddress"\r\n                                   Title="Address"/>\r\n        <xcdg:DataGridItemProperty Name="ShipPostalCode"\r\n                                   Title="Postal Code"/>\r\n         <xcdg:DataGridItemProperty Name="ShipName"\r\n                                    Title="Name"\r\n                                    CalculateDistinctValues="False"/>\r\n         <xcdg:DataGridItemProperty Name="OrderDate"\r\n                                    Title="Order Date"\r\n                                    CalculateDistinctValues="False"/>              \r\n         <xcdg:DataGridItemProperty Name="Freight"\r\n                                    CalculateDistinctValues="False"/>\r\n      </xcdg:DataGridCollectionViewSource.ItemProperties>\r\n    </xcdg:DataGridCollectionViewSource> \r\n     <Style x:Key="autoFilterControlStyle"\r\n       TargetType="{x:Type xcdg:AutoFilterControl}">\r\n       <Setter Property="Template">\r\n         <Setter.Value>\r\n           <ControlTemplate>\r\n             <ListBox x:Name="PART_DistinctValuesHost"\r\n                      SelectionMode="Single"/>\r\n           </ControlTemplate>\r\n         </Setter.Value>\r\n       </Setter>\r\n     </Style>\r\n  </Grid.Resources>\r\n  <xcdg:DataGridControl x:Name="OrdersGrid"\r\n                        ItemsSource="{Binding Source={StaticResource cvs_orders}}">\r\n    <xcdg:DataGridControl.Columns>\r\n     <xcdg:Column FieldName="ShipCountry"\r\n                  AutoFilterControlStyle="{StaticResource autoFilterControlStyle}"/>\r\n    </xcdg:DataGridControl.Columns>\r\n  </xcdg:DataGridControl>\r\n</Grid>\n'})}),"\n",(0,n.jsx)(r.h3,{id:"creating-external-auto-filter-controls",children:"Creating external auto-filter controls"}),"\n",(0,n.jsxs)(r.p,{children:["The following example demonstrates how to use a ",(0,n.jsx)(r.strong,{children:"ComboBox"})," as an auto-filter control to automatically filter the content of the ShipCountry column. ",(0,n.jsx)(r.strong,{children:"ComboBox"})," controls do not support multiple selections; therefore, the values of the target column will only be filtered by 1 value."]}),"\n",(0,n.jsxs)(r.p,{children:["Since, by default, the auto-filter control in the column-manager-cell drop downs support multiple selections, it is recommended to deactivate the drop down by setting the ",(0,n.jsx)(r.code,{children:"AllowAutoFilter"})," property of the ColumnManagerRow to false to hide the column-manager cells' auto-filter controls and prevent unexpected synchronization behavior between the controls that have the same auto-filter target column or different selection modes."]}),"\n",(0,n.jsxs)(a.A,{children:[(0,n.jsx)(l.A,{value:"xaml",label:"XAML",default:!0,children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-xml",children:'  <Grid>\r\n    <Grid.Resources>\r\n      <xcdg:DataGridCollectionViewSource x:Key="cvsOrders"\r\n                                        Source="{Binding Source={x:Static Application.Current},Path=Orders}"\r\n                                        AutoFilterMode="And"\r\n                                        AutoCreateItemProperties="False"\r\n                                        DefaultCalculateDistinctValues="False"\r\n                                        DistinctValuesConstraint="Filtered"\r\n                                        DistinctValuesRefreshNeeded="cvsOrders_DistinctValuesRefreshNeeded">\r\n        <xcdg:DataGridCollectionViewSource.ItemProperties>\r\n          <xcdg:DataGridItemProperty Name="ShipCountry"\r\n                                    Title="Country"\r\n                                    CalculateDistinctValues="True" />\r\n          <xcdg:DataGridItemProperty Name="ShipCity"\r\n                                    Title="City"\r\n                                    CalculateDistinctValues="True" />\r\n          <xcdg:DataGridItemProperty Name="ShipAddress"\r\n                                    Title="Address" />\r\n          <xcdg:DataGridItemProperty Name="ShipPostalCode"\r\n                                    Title="Postal Code" />\r\n          <xcdg:DataGridItemProperty Name="ShipName"\r\n                                    Title="Name" />\r\n          <xcdg:DataGridItemProperty Name="OrderDate"\r\n                                    Title="Order Date" />\r\n          <xcdg:DataGridItemProperty Name="Freight" />\r\n        </xcdg:DataGridCollectionViewSource.ItemProperties>\r\n      </xcdg:DataGridCollectionViewSource>\r\n    </Grid.Resources>\r\n    <DockPanel>\r\n      <StackPanel Margin="20,0,0,0"\r\n                  Orientation="Horizontal"\r\n                  DockPanel.Dock="Top"\r\n                  HorizontalAlignment="Left">\r\n        <xcdg:AutoFilterControl x:Name="ShipCountryAutoFilterControl"\r\n                                AutoFilterColumn="{Binding ElementName=dataGrid, Path=Columns[ShipCountry]}"\r\n                                AutoFilterContext="{Binding ElementName=dataGrid, Path=DataGridContext}">\r\n          <xcdg:AutoFilterControl.Template>\r\n            <ControlTemplate TargetType="{x:Type xcdg:AutoFilterControl}">\r\n              <StackPanel>\r\n                <Button Content="Clear Country filter"\r\n                        Command="xcdg:AutoFilterControl.ClearAutoFilterValues"\r\n                        CommandTarget="{Binding ElementName=ShipCountryAutoFilterControl}" />\r\n                <ComboBox x:Name="PART_DistinctValuesHost"\r\n                          DropDownOpened="ShipCountryAutoFilterControl_DropDownOpened" />\r\n              </StackPanel>\r\n            </ControlTemplate>\r\n          </xcdg:AutoFilterControl.Template>\r\n        </xcdg:AutoFilterControl>\r\n        <xcdg:AutoFilterControl x:Name="ShipCityAutoFilterControl"\r\n                                AutoFilterColumn="{Binding ElementName=dataGrid, Path=Columns[ShipCity]}"\r\n                                AutoFilterContext="{Binding ElementName=dataGrid, Path=DataGridContext}">\r\n          <xcdg:AutoFilterControl.Template>\r\n            <ControlTemplate TargetType="{x:Type xcdg:AutoFilterControl}">\r\n              <StackPanel>\r\n                <Button Content="Clear City filter"\r\n                        Command="xcdg:AutoFilterControl.ClearAutoFilterValues"\r\n                        CommandTarget="{Binding ElementName=ShipCityAutoFilterControl}" />\r\n                <ComboBox x:Name="PART_DistinctValuesHost"\r\n                          DropDownOpened="ShipCityAutoFilterControl_DropDownOpened" />\r\n              </StackPanel>\r\n            </ControlTemplate>\r\n          </xcdg:AutoFilterControl.Template>\r\n        </xcdg:AutoFilterControl>\r\n      </StackPanel>\r\n      <xcdg:DataGridControl x:Name="dataGrid"\r\n                            ItemsSource="{Binding Source={StaticResource cvsOrders}}">\r\n        <xcdg:DataGridControl.View>\r\n          <xcdg:TableflowView UseDefaultHeadersFooters="False">\r\n            <xcdg:TableflowView.FixedHeaders>\r\n              <DataTemplate>\r\n                <xcdg:GroupByControl />\r\n              </DataTemplate>\r\n              <DataTemplate>\r\n                <xcdg:ColumnManagerRow AllowAutoFilter="False" />\r\n              </DataTemplate>\r\n            </xcdg:TableflowView.FixedHeaders>\r\n          </xcdg:TableflowView>\r\n        </xcdg:DataGridControl.View>\r\n      </xcdg:DataGridControl>\r\n    </DockPanel>\r\n  </Grid>\n'})})}),(0,n.jsx)(l.A,{value:"csharp",label:"C#",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-csharp",children:'  public partial class MainWindow : Window\r\n  {\r\n      public MainWindow()\r\n      {\r\n          InitializeComponent();\r\n          //Reset all flags\r\n          m_distinctValuesNeedRefreshFlags.Add("ShipCountry", false);\r\n          m_distinctValuesNeedRefreshFlags.Add("ShipCity", false);\r\n      }\r\n      private void cvsOrders_DistinctValuesRefreshNeeded(object sender, EventArgs e)\r\n      {\r\n          //Use this event to set flags that will tell the AutoFilterControl it needs to update when its DropDown is opening.\r\n          IList<string> keys = m_distinctValuesNeedRefreshFlags.Keys.ToList();\r\n          for (int i = 0; i < keys.Count; i++)\r\n          {\r\n              m_distinctValuesNeedRefreshFlags[keys[i]] = true;\r\n          }\r\n      }\r\n      private void ShipCountryAutoFilterControl_DropDownOpened(object sender, EventArgs e)\r\n      {\r\n          //If DistinctValues need to be updated\r\n          if (m_distinctValuesNeedRefreshFlags["ShipCountry"])\r\n          {\r\n              //Get the collection view\r\n              DataGridCollectionView collectionView = dataGrid.ItemsSource as DataGridCollectionView;\r\n              if (collectionView != null)\r\n              {\r\n                  //And refresh the DistinctValues only for the required field\r\n                  collectionView.RefreshDistinctValuesForFieldName("ShipCountry");\r\n              }\r\n              //Reset the flag.\r\n              m_distinctValuesNeedRefreshFlags["ShipCountry"] = false;\r\n          }\r\n      }\r\n      private void ShipCityAutoFilterControl_DropDownOpened(object sender, EventArgs e)\r\n      {\r\n          //If DistinctValues need to be updated\r\n          if (m_distinctValuesNeedRefreshFlags["ShipCity"])\r\n          {\r\n              //Get the collection view\r\n              DataGridCollectionView collectionView = dataGrid.ItemsSource as DataGridCollectionView;\r\n              if (collectionView != null)\r\n              {\r\n                  //And refresh the DistinctValues only for the required field\r\n                  collectionView.RefreshDistinctValuesForFieldName("ShipCity");\r\n              }\r\n              //Reset the flag.\r\n              m_distinctValuesNeedRefreshFlags["ShipCity"] = false;\r\n          }\r\n      }\r\n      private Dictionary<string, bool> m_distinctValuesNeedRefreshFlags = new Dictionary<string, bool>();\r\n  } \n'})})}),(0,n.jsx)(l.A,{value:"vbnet",label:"VB.NET",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-vbnet",children:'  Public Partial Class MainWindow\r\n  Inherits Window\r\n  Public Sub New()\r\n    InitializeComponent()\r\n    \'Reset all flags\r\n    m_distinctValuesNeedRefreshFlags.Add("ShipCountry", False)\r\n    m_distinctValuesNeedRefreshFlags.Add("ShipCity", False)\r\n  End Sub\r\n  Private Sub cvsOrders_DistinctValuesRefreshNeeded(sender As Object, e As EventArgs)\r\n    \'Use this event to set flags that will tell the AutoFilterControl it needs to update when its DropDown is opening.\r\n    Dim keys As IList(Of String) = m_distinctValuesNeedRefreshFlags.Keys.ToList()\r\n    For i As Integer = 0 To keys.Count - 1\r\n    m_distinctValuesNeedRefreshFlags(keys(i)) = True\r\n    Next\r\n  End Sub\r\n  Private Sub ShipCountryAutoFilterControl_DropDownOpened(sender As Object, e As EventArgs)\r\n    \'If DistinctValues need to be updated\r\n    If m_distinctValuesNeedRefreshFlags("ShipCountry") Then\r\n    \'Get the collection view\r\n    Dim collectionView As DataGridCollectionView = TryCast(dataGrid.ItemsSource, DataGridCollectionView)\r\n    If collectionView IsNot Nothing Then\r\n      \'And refresh the DistinctValues only for the required field\r\n      collectionView.RefreshDistinctValuesForFieldName("ShipCountry")\r\n    End If\r\n    \'Reset the flag.\r\n    m_distinctValuesNeedRefreshFlags("ShipCountry") = False\r\n    End If\r\n  End Sub\r\n  Private Sub ShipCityAutoFilterControl_DropDownOpened(sender As Object, e As EventArgs)\r\n    \'If DistinctValues need to be updated\r\n    If m_distinctValuesNeedRefreshFlags("ShipCity") Then\r\n    \'Get the collection view\r\n    Dim collectionView As DataGridCollectionView = TryCast(dataGrid.ItemsSource, DataGridCollectionView)\r\n    If collectionView IsNot Nothing Then\r\n      \'And refresh the DistinctValues only for the required field\r\n      collectionView.RefreshDistinctValuesForFieldName("ShipCity")\r\n    End If\r\n    \'Reset the flag.\r\n    m_distinctValuesNeedRefreshFlags("ShipCity") = False\r\n    End If\r\n  End Sub\r\n  Private m_distinctValuesNeedRefreshFlags As New Dictionary(Of String, Boolean)()\r\n  End Class\n'})})})]}),"\n",(0,n.jsx)(r.h3,{id:"providing-custom-distinct-values",children:"Providing custom distinct values"}),"\n",(0,n.jsx)(r.p,{children:"The following example demonstrates how to provide custom distinct values that will display the only the month in columns that display DateTime values and that will filter according to a value range for a decimal column."}),"\n",(0,n.jsxs)(a.A,{children:[(0,n.jsx)(l.A,{value:"xaml",label:"XAML",default:!0,children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-xml",children:'  <Grid xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid">\r\n    <Grid.Resources>\r\n      <xcdg:DataGridCollectionViewSource x:Key="cvs_orders"\r\n                                          Source="{Binding Source={x:Static Application.Current}, Path=Orders}"\r\n                                          AutoFilterMode="And"\r\n                                          DefaultCalculateDistinctValues="False">\r\n          <xcdg:DataGridCollectionViewSource.ItemProperties>\r\n            <xcdg:DataGridItemProperty Name="OrderDate"\r\n                                      QueryDistinctValue="DataGridItemProperty_QueryDistinctValue_Date"\r\n                                      CalculateDistinctValues="True"/>\r\n            <xcdg:DataGridItemProperty Name="RequiredDate"\r\n                                      QueryDistinctValue="DataGridItemProperty_QueryDistinctValue_Date"\r\n                                      CalculateDistinctValues="True" />\r\n            <xcdg:DataGridItemProperty Name="ShippedDate"\r\n                                      QueryDistinctValue="DataGridItemProperty_QueryDistinctValue_Date"\r\n                                      CalculateDistinctValues="True" />\r\n            <xcdg:DataGridItemProperty Name="Freight"\r\n                                      QueryDistinctValue="DataGridItemProperty_QueryDistinctValue_Range"\r\n                                      CalculateDistinctValues="True" />\r\n          </xcdg:DataGridCollectionViewSource.ItemProperties>\r\n      </xcdg:DataGridCollectionViewSource>\r\n    \r\n    </Grid.Resources>\r\n    <xcdg:DataGridControl x:Name="OrdersGrid"\r\n                          ItemsSource="{Binding Source={StaticResource cvs_orders}}"/>\r\n  </Grid>\n'})})}),(0,n.jsx)(l.A,{value:"csharp",label:"C#",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-csharp",children:'private void DataGridItemProperty_QueryDistinctValue_Date( object sender, QueryDistinctValueEventArgs e )\r\n{\r\n  if( e.DataSourceValue is DateTime )\r\n  {\r\n    e.DistinctValue = ( ( DateTime )e.DataSourceValue ).ToString( "MMMM" );\r\n  }\r\n}\r\nprivate void DataGridItemProperty_QueryDistinctValue_Range( object sender, QueryDistinctValueEventArgs e )\r\n{\r\n  if( e.DataSourceValue is decimal )\r\n  {\r\n    decimal value = ( decimal )e.DataSourceValue;\r\n    if( value <= 100 )\r\n    {\r\n      e.DistinctValue = "0 - 100";\r\n    }\r\n    else if( value > 100 && value <= 500 )\r\n    {\r\n      e.DistinctValue = "101 - 500";\r\n    }\r\n    else\r\n    {\r\n      e.DistinctValue = "500+";\r\n    }\r\n  }\r\n}\n'})})}),(0,n.jsx)(l.A,{value:"vbnet",label:"VB.NET",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-vbnet",children:'  Private Sub DataGridItemProperty_QueryDistinctValue_Date( ByVal sender As Object, ByVal e As QueryDistinctValueEventArgs )\r\n    If TypeOf e.DataSourceValue Is DateTime Then\r\n      e.DistinctValue = CDate( e.DataSourceValue ).ToString( "MMMM" )\r\n    End If\r\n  End Sub\r\n  Private Sub DataGridItemProperty_QueryDistinctValue_Range( ByVal sender As Object, ByVal e As QueryDistinctValueEventArgs )\r\n    If TypeOf e.DataSourceValue Is Decimal Then\r\n      Dim value As Decimal = CDec( e.DataSourceValue )\r\n      If value <= 100 Then\r\n        e.DistinctValue = "0 - 100"\r\n      ElseIf( value > 100 And value <= 500 ) Then\r\n        e.DistinctValue = "101 - 500"\r\n      Else\r\n        e.DistinctValue = "500+"\r\n      End If\r\n    End If\r\n  End Sub\n'})})})]}),"\n",(0,n.jsx)(r.h3,{id:"using-a-filter-row",children:"Using a filter row"}),"\n",(0,n.jsx)(r.p,{children:"The following example demonstrates how to add a FilterRow to the fixed headers of a grid's view that will allow the data items in the grid to be filtered according to the user-specified filter criteria."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-xml",children:'<Grid xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid">\r\n  <Grid.Resources>\r\n     <xcdg:DataGridCollectionViewSource x:Key="cvs_products"\r\n                                        Source="{Binding Source={x:Static Application.Current}, Path=Orders}" />\r\n  </Grid.Resources>\r\n  <xcdg:DataGridControl x:Name="OrdersGrid"\r\n                        ItemsSource="{Binding Source={StaticResource cvs_products}}">\r\n     <xcdg:DataGridControl.View>\r\n        <xcdg:TableView>\r\n          <xcdg:TableView.FixedHeaders>\r\n             <DataTemplate>\r\n                <xcdg:FilterRow Background="Pink" />\r\n             </DataTemplate>\r\n          </xcdg:TableView.FixedHeaders>\r\n        </xcdg:TableView>\r\n     </xcdg:DataGridControl.View>\r\n  </xcdg:DataGridControl>\r\n</Grid>\n'})}),"\n",(0,n.jsx)(r.h3,{id:"providing-default-filter-criteria",children:"Providing default filter criteria"}),"\n",(0,n.jsx)(r.p,{children:"The following example demonstrates how to provide default filter criteria that will initially filter the data items in a grid through the FilterRow."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-xml",children:'<Grid xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"\r\n     xmlns:s="clr-namespace:System;assembly=mscorlib">\r\n  <Grid.Resources>\r\n     <xcdg:DataGridCollectionViewSource x:Key="cvs_orders"\r\n                                        Source="{Binding Source={x:Static Application.Current}, Path=Orders}">\r\n        <xcdg:DataGridCollectionViewSource.ItemProperties>\r\n\r\n         <xcdg:DataGridItemProperty Name="ShipCountry">\r\n            <xcdg:DataGridItemProperty.FilterCriterion>\r\n               <xcdg:EqualToFilterCriterion Value="Canada" />\r\n            </xcdg:DataGridItemProperty.FilterCriterion>\r\n         </xcdg:DataGridItemProperty>\r\n         <xcdg:DataGridItemProperty Name="EmployeeID">\r\n            <xcdg:DataGridItemProperty.FilterCriterion>\r\n               <xcdg:OrFilterCriterion>\r\n                  <xcdg:OrFilterCriterion.FirstFilterCriterion>\r\n                     <xcdg:EqualToFilterCriterion>\r\n                        <s:Int32>2</s:Int32>\r\n                     </xcdg:EqualToFilterCriterion>\r\n                  </xcdg:OrFilterCriterion.FirstFilterCriterion>\r\n                  <xcdg:OrFilterCriterion.SecondFilterCriterion>\r\n                     <xcdg:EqualToFilterCriterion>\r\n                        <s:Int32>3</s:Int32>\r\n                     </xcdg:EqualToFilterCriterion>\r\n                  </xcdg:OrFilterCriterion.SecondFilterCriterion>\r\n               </xcdg:OrFilterCriterion>\r\n            </xcdg:DataGridItemProperty.FilterCriterion>\r\n         </xcdg:DataGridItemProperty>\r\n        </xcdg:DataGridCollectionViewSource.ItemProperties>\r\n     </xcdg:DataGridCollectionViewSource>\r\n  </Grid.Resources>\r\n\r\n  <xcdg:DataGridControl x:Name="OrdersGrid"\r\n                        ItemsSource="{Binding Source={StaticResource cvs_orders}}">\r\n     <xcdg:DataGridControl.View>\r\n        <xcdg:TableView>\r\n           <xcdg:TableView.FixedHeaders>\r\n              <DataTemplate>\r\n                <xcdg:FilterRow Background="Pink" />\r\n              </DataTemplate>\r\n           </xcdg:TableView.FixedHeaders>\r\n        </xcdg:TableView>\r\n     </xcdg:DataGridControl.View>\r\n  </xcdg:DataGridControl>\r\n</Grid>\n'})}),"\n",(0,n.jsx)(r.h3,{id:"enabling-and-disabling-advanced-filtering",children:"Enabling and disabling advanced filtering"}),"\n",(0,n.jsx)(r.p,{children:"The following example demonstrates how to set advanced filter mode to Always, and how to disable advanced filtering on at least one column."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-xml",children:'<Grid xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid">\r\n   <Grid.Resources>\r\n      <xcdg:DataGridCollectionViewSource x:Key="cvs_orders"\r\n                                         Source="{Binding Source={x:Static Application.Current}, Path=Orders}" />\r\n   </Grid.Resources>\r\n   <xcdg:DataGridControl x:Name="OrdersGrid"\r\n                         ItemsSource="{Binding Source={StaticResource cvs_orders}}">\r\n      <xcdg:DataGridControl.Columns>\r\n         <xcdg:Column FieldName="ShipCountry"\r\n                      AllowAdvancedFilter="False" />\r\n      </xcdg:DataGridControl.Columns>\r\n      <xcdg:DataGridControl.View>\r\n         <xcdg:TableflowView AdvancedFilterMode="Always" />\r\n      </xcdg:DataGridControl.View>\r\n   </xcdg:DataGridControl>\r\n</Grid>\n'})}),"\n",(0,n.jsx)(r.h3,{id:"localize-the-filter-operators",children:"Localize the filter operators"}),"\n",(0,n.jsx)(r.p,{children:"The following example demonstrates how to set a style to localize the operators."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-xml",children:'<Grid xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid">\r\n   <Grid.Resources>\r\n      <ResourceDictionary>\r\n         <xcdg:DataGridCollectionViewSource x:Key="cvs_orders"\r\n                                            Source="{Binding Source={x:Static Application.Current}, Path=Orders}" />\r\n         <Style x:Key="filterExpressionEditorStyle"\r\n                TargetType="xcdg:FilterExpressionEditor">\r\n            <Setter Property="FilterOperatorsText">\r\n               <Setter.Value>\r\n                  <col:Hashtable>\r\n                     <s:String x:Key="{x:Type xcdg:GreaterThanFilterCriterion}">&gt;</s:String>\r\n                     <s:String x:Key="{x:Type xcdg:GreaterThanOrEqualToFilterCriterion}">&gt;=</s:String>\r\n                     <s:String x:Key="{x:Type xcdg:LessThanFilterCriterion}">&lt;</s:String>\r\n                     <s:String x:Key="{x:Type xcdg:LessThanOrEqualToFilterCriterion}">&lt;=</s:String>\r\n                     <s:String x:Key="{x:Type xcdg:EqualToFilterCriterion}">=</s:String>\r\n                     <s:String x:Key="{x:Type xcdg:DifferentThanFilterCriterion}">&lt;&gt;</s:String>\r\n                  </col:Hashtable>\r\n               </Setter.Value>\r\n            </Setter>\r\n         </Style>\r\n      </ResourceDictionary>\r\n   </Grid.Resources>\r\n   <xcdg:DataGridControl x:Name="OrdersGrid"\r\n                         ItemsSource="{Binding Source={StaticResource cvs_orders}}">\r\n      <xcdg:DataGridControl.Columns>\r\n         <xcdg:Column FieldName="ShipCountry"\r\n                      FilterExpressionEditorStyle="{StaticResource filterExpressionEditorStyle}" />\r\n      </xcdg:DataGridControl.Columns>\r\n   </xcdg:DataGridControl>\r\n</Grid>\n'})})]})}function m(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},9365:(e,r,t)=>{t.d(r,{A:()=>l});t(6540);var n=t(4164);const i={tabItem:"tabItem_Ymn6"};var a=t(4848);function l(e){let{children:r,hidden:t,className:l}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,n.A)(i.tabItem,l),hidden:t,children:r})}},1470:(e,r,t)=>{t.d(r,{A:()=>v});var n=t(6540),i=t(4164),a=t(3104),l=t(6347),o=t(205),s=t(7485),d=t(1682),c=t(679);function u(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:r,children:t}=e;return(0,n.useMemo)((()=>{const e=r??function(e){return u(e).map((e=>{let{props:{value:r,label:t,attributes:n,default:i}}=e;return{value:r,label:t,attributes:n,default:i}}))}(t);return function(e){const r=(0,d.XI)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,t])}function m(e){let{value:r,tabValues:t}=e;return t.some((e=>e.value===r))}function h(e){let{queryString:r=!1,groupId:t}=e;const i=(0,l.W6)(),a=function(e){let{queryString:r=!1,groupId:t}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:r,groupId:t});return[(0,s.aZ)(a),(0,n.useCallback)((e=>{if(!a)return;const r=new URLSearchParams(i.location.search);r.set(a,e),i.replace({...i.location,search:r.toString()})}),[a,i])]}function g(e){const{defaultValue:r,queryString:t=!1,groupId:i}=e,a=p(e),[l,s]=(0,n.useState)((()=>function(e){let{defaultValue:r,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!m({value:r,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:r,tabValues:a}))),[d,u]=h({queryString:t,groupId:i}),[g,x]=function(e){let{groupId:r}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(r),[i,a]=(0,c.Dv)(t);return[i,(0,n.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:i}),D=(()=>{const e=d??g;return m({value:e,tabValues:a})?e:null})();(0,o.A)((()=>{D&&s(D)}),[D]);return{selectedValue:l,selectValue:(0,n.useCallback)((e=>{if(!m({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),x(e)}),[u,x,a]),tabValues:a}}var x=t(2303);const D={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=t(4848);function C(e){let{className:r,block:t,selectedValue:n,selectValue:l,tabValues:o}=e;const s=[],{blockElementScrollPositionUntilNextRender:d}=(0,a.a_)(),c=e=>{const r=e.currentTarget,t=s.indexOf(r),i=o[t].value;i!==n&&(d(r),l(i))},u=e=>{let r=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=s.indexOf(e.currentTarget)+1;r=s[t]??s[0];break}case"ArrowLeft":{const t=s.indexOf(e.currentTarget)-1;r=s[t]??s[s.length-1];break}}r?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},r),children:o.map((e=>{let{value:r,label:t,attributes:a}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:n===r?0:-1,"aria-selected":n===r,ref:e=>s.push(e),onKeyDown:u,onClick:c,...a,className:(0,i.A)("tabs__item",D.tabItem,a?.className,{"tabs__item--active":n===r}),children:t??r},r)}))})}function y(e){let{lazy:r,children:t,selectedValue:a}=e;const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(r){const e=l.find((e=>e.props.value===a));return e?(0,n.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:l.map(((e,r)=>(0,n.cloneElement)(e,{key:r,hidden:e.props.value!==a})))})}function S(e){const r=g(e);return(0,f.jsxs)("div",{className:(0,i.A)("tabs-container",D.tabList),children:[(0,f.jsx)(C,{...r,...e}),(0,f.jsx)(y,{...r,...e})]})}function v(e){const r=(0,x.A)();return(0,f.jsx)(S,{...e,children:u(e.children)},String(r))}},8453:(e,r,t)=>{t.d(r,{R:()=>l,x:()=>o});var n=t(6540);const i={},a=n.createContext(i);function l(e){const r=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),n.createElement(a.Provider,{value:r},e.children)}}}]);