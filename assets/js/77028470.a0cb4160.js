"use strict";(self.webpackChunkxceed_doc_ui=self.webpackChunkxceed_doc_ui||[]).push([[5566],{1652:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>h});var i=n(4848),a=n(8453);const o={},r="The PathPanel, PathView, and PathConfiguration Classes",s={id:"listbox/panel-view/02",title:"The PathPanel, PathView, and PathConfiguration Classes",description:'The PathPanel and PathView classes display listbox items along a "path," allowing for the creation of unique, eye-catching applications. The settings available for configuring a path make it easy to draw attention to the most important item in the list in a striking fashion (see Configuring the Path below).',source:"@site/docs/listbox/panel-view/02.md",sourceDirName:"listbox/panel-view",slug:"/listbox/panel-view/02",permalink:"/xceed-doc-ui/docs/listbox/panel-view/02",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"The StackPanel and StackView Classes",permalink:"/xceed-doc-ui/docs/listbox/panel-view/01"},next:{title:"The MultiViewPanel Class",permalink:"/xceed-doc-ui/docs/listbox/panel-view/03"}},l={},h=[{value:"Configuring the Path",id:"configuring-the-path",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"the-pathpanel-pathview-and-pathconfiguration-classes",children:"The PathPanel, PathView, and PathConfiguration Classes"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"PathPanel"})," and ",(0,i.jsx)(t.code,{children:"PathView"}),' classes display listbox items along a "path," allowing for the creation of unique, eye-catching applications. The settings available for configuring a path make it easy to draw attention to the most important item in the list in a striking fashion (see Configuring the Path below).']}),"\n",(0,i.jsxs)(t.p,{children:["The PathView is used in the ",(0,i.jsx)(t.code,{children:"MultiViewPanel"})," class to provide easy, animated switching between views. It is otherwise identical to ",(0,i.jsx)(t.code,{children:"PathPanel"})," in terms of functionality."]}),"\n",(0,i.jsxs)(t.p,{children:["The following XAML illustrates how to set up a simple ",(0,i.jsx)(t.code,{children:"PathPanel"}),"."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-xml",children:'<xclb:ListBox Name="listBox1"\r\n     ToolPaneVisibility="Collapsed">\r\n  ...\r\n  <xclb:ListBox.ItemsPanel>\r\n    <xclb:ItemsPanelTemplate>\r\n      <xclb:PathPanel>\r\n        <xclb:PathPanel.PathConfiguration>\r\n          <xclb:PathConfiguration PathPadding="40"\r\n                                  PathStretch="Fill">\r\n            <xclb:PathConfiguration.PathGeometry>\r\n              <PathGeometry>\r\n                <PathFigure IsClosed="False"\r\n                  IsFilled="False"\r\n                  StartPoint="100,0">\r\n                  <BezierSegment Point1="-75,50"\r\n                      Point2="175,150"\r\n                      Point3="0,200" />\r\n                </PathFigure>\r\n              </PathGeometry>\r\n            </xclb:PathConfiguration.PathGeometry>\r\n          </xclb:PathConfiguration>\r\n        </xclb:PathPanel.PathConfiguration>\r\n      </xclb:PathPanel>\r\n    </xclb:ItemsPanelTemplate>\r\n  </xclb:ListBox.ItemsPanel>\r\n  ...\r\n</xclb:ListBox>\n'})}),"\n",(0,i.jsx)(t.h2,{id:"configuring-the-path",children:"Configuring the Path"}),"\n",(0,i.jsxs)(t.p,{children:["The path in a ",(0,i.jsx)(t.code,{children:"PathPanel"})," or a ",(0,i.jsx)(t.code,{children:"PathView"})," is determined through their ",(0,i.jsx)(t.code,{children:"PathConfiguration"})," properties. The ",(0,i.jsx)(t.code,{children:"PathConfiguration"})," class provides several properties to configure the path."]}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"PathGeometry"})," property defines the shape of the path and takes a Geometry-derived object. The following XAML shows how to set the path to an S-shape."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-xml",children:'<xclb:PathConfiguration.PathGeometry>\r\n  <PathGeometry>\r\n    <PathFigure IsClosed="False"\r\n      IsFilled="False"\r\n      StartPoint="100,0">\r\n      <BezierSegment Point1="-75,50"\r\n          Point2="175,150"\r\n          Point3="0,200" />\r\n    </PathFigure>\r\n  </PathGeometry>\r\n</xclb:PathConfiguration.PathGeometry>\n'})}),"\n",(0,i.jsxs)(t.p,{children:["When the ",(0,i.jsx)(t.code,{children:"ContainerOrientation"})," property is set to None, items are oriented so that they are always parallel to the horizontal edges of the application, window, or screen. When set to ",(0,i.jsx)(t.code,{children:"OrientOnPath"}),", items will be rotated to be perpendicular to the axis of the path segment they are on. The ",(0,i.jsx)(t.code,{children:"ContainerPadding"})," property specifies a device-independent units (1/96th inch per unit) measure representing the padding between items."]}),"\n",(0,i.jsxs)(t.p,{children:["The ScalingStops and ",(0,i.jsx)(t.code,{children:"ZIndexStops"})," properties contain collections of ",(0,i.jsx)(t.code,{children:"ScalingStop"})," and ",(0,i.jsx)(t.code,{children:"ZIndexStop"})," objects, respectively, which influence the scaling and z-order of items depending on their current position on the path. The ",(0,i.jsx)(t.code,{children:"ScalingStop"})," instances in the collection determine the ScalingFactor at a given Offset on the path. The ",(0,i.jsx)(t.code,{children:"ZIndexStop"})," instances in the collection determine the ",(0,i.jsx)(t.code,{children:"ZIndexFactor"})," (depth) at a given Offset on the path. Together, they allow items to be displayed as if they are receding in the distance along the path. As a result, the end-user's attention can be directed to the current or most important item, for example."]}),"\n",(0,i.jsx)(t.p,{children:'The following XAML shows how to configure a path that will create an "oval" effect of the items.'}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-xml",children:'<xclb:PathPanel.PathConfiguration>\r\n  <xclb:PathConfiguration PathPadding="100"\r\n                          ContainerPadding="-150">\r\n    <xclb:PathConfiguration.PathGeometry>\r\n      <EllipseGeometry Center="100,100"\r\n                       RadiusX="100"\r\n                       RadiusY="100" />\r\n    </xclb:PathConfiguration.PathGeometry>\r\n    <xclb:PathConfiguration.ScalingStops>\r\n      <xclb:ScalingStop Offset="0"\r\n                        ScalingFactor="0.15" />\r\n      <xclb:ScalingStop Offset="0.5"\r\n                        ScalingFactor="1.1" />\r\n      <xclb:ScalingStop Offset="1"\r\n                        ScalingFactor="0.15" />\r\n    </xclb:PathConfiguration.ScalingStops>\r\n    <xclb:PathConfiguration.ZIndexStops>\r\n      <xclb:ZIndexStop Offset="0"\r\n                       ZIndexFactor="0" />\r\n      <xclb:ZIndexStop Offset="0.5"\r\n                       ZIndexFactor="1" />\r\n      <xclb:ZIndexStop Offset="1"\r\n                       ZIndexFactor="0" />\r\n    </xclb:PathConfiguration.ZIndexStops>\r\n  </xclb:PathConfiguration>\r\n</xclb:PathPanel.PathConfiguration>\n'})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"StartOffset"}),' property determines the offset on the path where the first item is initially displayed and where it falls when at the "top" of the list.']}),"\n",(0,i.jsxs)(t.p,{children:["Finally, the ",(0,i.jsx)(t.code,{children:"PathPadding"})," and ",(0,i.jsx)(t.code,{children:"PathStretch"})," properties determine the padding between the path and the panel's bounds and how the path geometry is resized to fill its allocated space, respectively."]})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>s});var i=n(6540);const a={},o=i.createContext(a);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);