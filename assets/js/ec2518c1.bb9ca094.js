"use strict";(self.webpackChunkxceed_doc_ui=self.webpackChunkxceed_doc_ui||[]).push([[3539],{1208:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>d,toc:()=>l});var r=t(4848),o=t(8453);const a={},i="Indenting a Non-row Item in a Detail Configuration Header",d={id:"code-snippets/18",title:"Indenting a Non-row Item in a Detail Configuration Header",description:"The following example demonstrates how to add a non-row item that will act as a detail separator to the header section of a detail configuration whose indentation will correspond to detail and group levels in which it is contained.",source:"@site/datagrid/code-snippets/18.md",sourceDirName:"code-snippets",slug:"/code-snippets/18",permalink:"/xceed-doc-ui/datagrid/code-snippets/18",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebardatagrid",previous:{title:"Handling collection-changed events",permalink:"/xceed-doc-ui/datagrid/code-snippets/17"},next:{title:"Preventing ScrollBars from being Displayed",permalink:"/xceed-doc-ui/datagrid/code-snippets/19"}},c={},l=[];function s(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"indenting-a-non-row-item-in-a-detail-configuration-header",children:"Indenting a Non-row Item in a Detail Configuration Header"})}),"\n",(0,r.jsx)(n.p,{children:"The following example demonstrates how to add a non-row item that will act as a detail separator to the header section of a detail configuration whose indentation will correspond to detail and group levels in which it is contained."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<Grid xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"\r\n      xmlns:local="clr-namespace:Xceed.Wpf.Documentation">\r\n  <Grid.Resources>\r\n   <xcdg:DataGridCollectionViewSource x:Key="cvs_employees"\r\n                                      Source="{Binding Source={x:Static Application.Current},\r\n                                                Path=Employees}"/>\r\n \r\n  </Grid.Resources>\r\n \r\n  <xcdg:DataGridControl x:Name="EmployeesGrid"\r\n                        ItemsSource="{Binding Source={StaticResource cvs_employees}}"\r\n                        AutoCreateDetailConfigurations="True">  \r\n     <xcdg:DataGridControl.Columns>\r\n        <xcdg:Column FieldName="Photo"\r\n                     Visible="False" />\r\n     </xcdg:DataGridControl.Columns>\r\n     <xcdg:DataGridControl.DetailConfigurations>\r\n        <xcdg:DetailConfiguration RelationName="Employee_Orders"\r\n                                  Title="Employee Orders"\r\n                                  UseDefaultHeadersFooters="False">\r\n           <xcdg:DetailConfiguration.Headers>\r\n              <DataTemplate>\r\n                 <DockPanel>                                   \r\n                    <xcdg:HierarchicalGroupLevelIndicatorPane  xcdg:GroupLevelIndicatorPane.ShowIndicators="False"\r\n                                                               xcdg:TableView.CanScrollHorizontally="False"\r\n                                                                DockPanel.Dock="Left" />\r\n                    <Border Height="24"\r\n                            xcdg:TableView.CanScrollHorizontally="False"\r\n                            Background="AliceBlue"/>\r\n                 </DockPanel>\r\n              </DataTemplate> \r\n             <DataTemplate>\r\n                 <xcdg:ColumnManagerRow />\r\n              </DataTemplate>\r\n           </xcdg:DetailConfiguration.Headers>\r\n        </xcdg:DetailConfiguration>\r\n     </xcdg:DataGridControl.DetailConfigurations>       \r\n  </xcdg:DataGridControl>\r\n</Grid>\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(s,{...e})}):s(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>d});var r=t(6540);const o={},a=r.createContext(o);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);